Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2020.2 (lin64) Build 3064766 Wed Nov 18 09:12:47 MST 2020
| Date         : Thu Dec 29 18:01:14 2022
| Host         : sdu-Standard-PC-Q35-ICH9-2009 running 64-bit Ubuntu 20.04.5 LTS
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xczu3eg-sbva484-1-i
| Speed File   : -1
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 530
+-----------+----------+--------------------------------------------+------------+
| Rule      | Severity | Description                                | Violations |
+-----------+----------+--------------------------------------------+------------+
| DPIP-2    | Warning  | Input pipelining                           | 110        |
| DPOP-3    | Warning  | PREG Output pipelining                     | 176        |
| DPOP-4    | Warning  | MREG Output pipelining                     | 242        |
| REQP-1774 | Warning  | RAMB36E2_WRITE_WIDTH_A_18_doesnt_use_WEA32 | 2          |
+-----------+----------+--------------------------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-2#1 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#2 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#3 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#4 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#5 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#6 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#7 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#8 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#9 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#10 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#11 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#12 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#13 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#14 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#15 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#16 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#17 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#18 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#19 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#20 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#21 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#22 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#23 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#24 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#25 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#26 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#27 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#28 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#29 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#30 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#31 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#32 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#33 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#34 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#35 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#36 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#37 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#38 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#39 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#40 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#41 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#42 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#43 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#44 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#45 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#46 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#47 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#48 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#49 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#50 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U76/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U76/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#51 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#52 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#53 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U80/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U80/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#54 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U81/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U81/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#55 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#56 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#57 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U84/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U84/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#58 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#59 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#60 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#61 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#62 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U90/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U90/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#63 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#64 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#65 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U93/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U93/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#66 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U94/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U94/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#67 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U95/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U95/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#68 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U96/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U96/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#69 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#70 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#71 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#72 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#73 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U99/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U99/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#74 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#75 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#76 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U109/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U109/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#77 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U119/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U119/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#78 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#79 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#80 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U89/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U89/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#81 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_11_reg_12055_reg input design_1_i/nn_inference_0/inst/mul_ln1118_11_reg_12055_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#82 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_13_reg_12085_reg input design_1_i/nn_inference_0/inst/mul_ln1118_13_reg_12085_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#83 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_14_reg_12090_reg input design_1_i/nn_inference_0/inst/mul_ln1118_14_reg_12090_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#84 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_18_reg_12165_reg input design_1_i/nn_inference_0/inst/mul_ln1118_18_reg_12165_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#85 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_19_reg_12200_reg input design_1_i/nn_inference_0/inst/mul_ln1118_19_reg_12200_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#86 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_20_reg_12210_reg input design_1_i/nn_inference_0/inst/mul_ln1118_20_reg_12210_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#87 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_21_reg_12235_reg input design_1_i/nn_inference_0/inst/mul_ln1118_21_reg_12235_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#88 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1192_4_reg_12100_reg input design_1_i/nn_inference_0/inst/mul_ln1192_4_reg_12100_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#89 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1192_6_reg_12180_reg input design_1_i/nn_inference_0/inst/mul_ln1192_6_reg_12180_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#90 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1192_7_reg_12220_reg input design_1_i/nn_inference_0/inst/mul_ln1192_7_reg_12220_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#91 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_55_reg_12045_reg input design_1_i/nn_inference_0/inst/mul_ln703_55_reg_12045_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#92 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_57_reg_12060_reg input design_1_i/nn_inference_0/inst/mul_ln703_57_reg_12060_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#93 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_58_reg_12070_reg input design_1_i/nn_inference_0/inst/mul_ln703_58_reg_12070_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#94 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_60_reg_12075_reg input design_1_i/nn_inference_0/inst/mul_ln703_60_reg_12075_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#95 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_63_reg_12105_reg input design_1_i/nn_inference_0/inst/mul_ln703_63_reg_12105_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#96 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_65_reg_12110_reg input design_1_i/nn_inference_0/inst/mul_ln703_65_reg_12110_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#97 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_66_reg_12120_reg input design_1_i/nn_inference_0/inst/mul_ln703_66_reg_12120_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#98 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_67_reg_12125_reg input design_1_i/nn_inference_0/inst/mul_ln703_67_reg_12125_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#99 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_68_reg_12130_reg input design_1_i/nn_inference_0/inst/mul_ln703_68_reg_12130_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#100 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_71_reg_12140_reg input design_1_i/nn_inference_0/inst/mul_ln703_71_reg_12140_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#101 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_72_reg_12150_reg input design_1_i/nn_inference_0/inst/mul_ln703_72_reg_12150_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#102 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_73_reg_12155_reg input design_1_i/nn_inference_0/inst/mul_ln703_73_reg_12155_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#103 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_75_reg_12175_reg input design_1_i/nn_inference_0/inst/mul_ln703_75_reg_12175_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#104 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_77_reg_12190_reg input design_1_i/nn_inference_0/inst/mul_ln703_77_reg_12190_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#105 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_78_reg_12195_reg input design_1_i/nn_inference_0/inst/mul_ln703_78_reg_12195_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#106 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_81_reg_12215_reg input design_1_i/nn_inference_0/inst/mul_ln703_81_reg_12215_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#107 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_84_reg_12230_reg input design_1_i/nn_inference_0/inst/mul_ln703_84_reg_12230_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#108 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_87_reg_12245_reg input design_1_i/nn_inference_0/inst/mul_ln703_87_reg_12245_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#109 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_88_reg_12250_reg input design_1_i/nn_inference_0/inst/mul_ln703_88_reg_12250_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#110 Warning
Input pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_89_reg_12255_reg input design_1_i/nn_inference_0/inst/mul_ln703_89_reg_12255_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-3#1 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#2 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#3 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#4 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#5 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#6 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#7 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#8 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#9 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U23/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U23/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#10 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#11 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#12 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U48/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U48/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#13 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U50/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U50/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#14 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U65/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U65/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#15 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#16 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#17 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#18 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#19 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#20 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#21 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U9/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U9/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#22 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#23 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#24 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#25 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#26 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#27 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U10/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U10/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#28 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#29 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#30 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#31 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#32 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#33 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#34 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#35 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#36 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#37 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#38 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#39 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#40 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#41 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#42 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#43 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#44 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#45 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#46 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#47 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#48 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#49 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#50 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#51 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#52 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#53 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#54 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#55 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#56 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#57 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#58 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U13/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U13/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#59 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U14/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U14/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#60 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U15/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U15/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#61 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#62 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#63 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#64 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#65 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U18/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U18/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#66 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U19/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U19/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#67 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U20/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U20/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#68 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#69 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#70 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#71 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#72 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U24/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U24/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#73 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U25/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U25/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#74 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#75 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#76 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U28/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U28/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#77 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U29/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U29/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#78 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#79 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#80 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U30/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U30/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#81 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#82 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#83 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#84 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#85 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U33/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U33/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#86 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U34/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U34/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#87 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U35/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U35/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#88 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#89 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#90 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U38/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U38/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#91 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U39/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U39/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#92 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#93 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#94 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U40/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U40/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#95 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#96 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#97 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U43/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U43/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#98 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U44/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U44/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#99 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U45/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U45/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#100 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#101 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#102 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U47/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U47/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#103 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U47/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U47/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#104 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U49/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U49/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#105 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U5/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U5/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#106 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U5/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U5/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#107 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U51/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U51/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#108 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U51/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U51/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#109 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U53/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U53/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#110 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U54/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U54/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#111 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U55/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U55/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#112 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U56/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U56/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#113 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U56/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U56/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#114 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U57/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U57/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#115 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U57/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U57/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#116 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U58/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U58/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#117 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U59/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U59/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#118 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U6/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U6/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#119 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U6/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U6/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#120 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U60/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U60/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#121 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U61/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U61/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#122 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U61/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U61/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#123 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U62/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U62/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#124 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U62/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U62/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#125 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U63/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U63/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#126 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U64/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U64/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#127 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U67/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U67/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#128 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U67/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U67/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#129 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U68/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U68/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#130 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U68/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U68/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#131 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U7/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U7/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#132 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U7/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U7/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#133 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#134 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#135 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#136 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#137 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#138 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#139 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U76/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U76/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#140 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#141 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#142 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U8/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U8/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#143 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U80/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U80/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#144 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U81/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U81/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#145 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#146 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#147 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U84/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U84/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#148 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#149 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#150 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#151 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#152 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U90/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U90/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#153 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#154 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#155 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U93/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U93/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#156 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U94/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U94/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#157 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U95/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U95/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#158 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U96/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U96/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#159 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#160 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#161 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#162 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#163 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U99/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U99/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#164 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_39_1_1_U27/nn_inference_mul_9s_32s_39_1_1_Multiplier_2_U/p output design_1_i/nn_inference_0/inst/mul_9s_32s_39_1_1_U27/nn_inference_mul_9s_32s_39_1_1_Multiplier_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#165 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_39_1_1_U27/nn_inference_mul_9s_32s_39_1_1_Multiplier_2_U/p__0 output design_1_i/nn_inference_0/inst/mul_9s_32s_39_1_1_U27/nn_inference_mul_9s_32s_39_1_1_Multiplier_2_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#166 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#167 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#168 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U109/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U109/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#169 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U119/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U119/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#170 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U42/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U42/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#171 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U42/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U42/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#172 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U52/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U52/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#173 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U52/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U52/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#174 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#175 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#176 Warning
PREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U89/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p output design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U89/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-4#1 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#2 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#3 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#4 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#5 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#6 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#7 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#8 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#9 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U23/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U23/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#10 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#11 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#12 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U48/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U48/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#13 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U50/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U50/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#14 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U65/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U65/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#15 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#16 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#17 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#18 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#19 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#20 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#21 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U9/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U9/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#22 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#23 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#24 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#25 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#26 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#27 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U10/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U10/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#28 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#29 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#30 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#31 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#32 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#33 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#34 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#35 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#36 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#37 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#38 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#39 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#40 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#41 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#42 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#43 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#44 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#45 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#46 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#47 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#48 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#49 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#50 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#51 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#52 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#53 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#54 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#55 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#56 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#57 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#58 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U13/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U13/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#59 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U14/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U14/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#60 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U15/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U15/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#61 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#62 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#63 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#64 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#65 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U18/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U18/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#66 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U19/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U19/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#67 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U20/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U20/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#68 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#69 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#70 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#71 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#72 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U24/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U24/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#73 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U25/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U25/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#74 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#75 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#76 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U28/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U28/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#77 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U29/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U29/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#78 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#79 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#80 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U30/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U30/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#81 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#82 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#83 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#84 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#85 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U33/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U33/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#86 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U34/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U34/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#87 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U35/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U35/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#88 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#89 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#90 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U38/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U38/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#91 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U39/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U39/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#92 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#93 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#94 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U40/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U40/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#95 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#96 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#97 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U43/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U43/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#98 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U44/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U44/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#99 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U45/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U45/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#100 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#101 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#102 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U47/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U47/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#103 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U47/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U47/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#104 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U49/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U49/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#105 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U5/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U5/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#106 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U5/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U5/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#107 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U51/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U51/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#108 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U51/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U51/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#109 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U53/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U53/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#110 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U54/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U54/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#111 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U55/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U55/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#112 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U56/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U56/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#113 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U56/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U56/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#114 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U57/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U57/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#115 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U57/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U57/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#116 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U58/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U58/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#117 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U59/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U59/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#118 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U6/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U6/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#119 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U6/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U6/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#120 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U60/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U60/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#121 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U61/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U61/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#122 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U61/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U61/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#123 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U62/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U62/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#124 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U62/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U62/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#125 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U63/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U63/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#126 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U64/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U64/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#127 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U67/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U67/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#128 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U67/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U67/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#129 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U68/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U68/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#130 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U68/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U68/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#131 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U7/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U7/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#132 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U7/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U7/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#133 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#134 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#135 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#136 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#137 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#138 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#139 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U76/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U76/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#140 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#141 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#142 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U8/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U8/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#143 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U80/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U80/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#144 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U81/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U81/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#145 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#146 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#147 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U84/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U84/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#148 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#149 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#150 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#151 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#152 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U90/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U90/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#153 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#154 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#155 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U93/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U93/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#156 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U94/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U94/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#157 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U95/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U95/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#158 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U96/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U96/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#159 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#160 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#161 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#162 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#163 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U99/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U99/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#164 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_39_1_1_U27/nn_inference_mul_9s_32s_39_1_1_Multiplier_2_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_39_1_1_U27/nn_inference_mul_9s_32s_39_1_1_Multiplier_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#165 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_39_1_1_U27/nn_inference_mul_9s_32s_39_1_1_Multiplier_2_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_39_1_1_U27/nn_inference_mul_9s_32s_39_1_1_Multiplier_2_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#166 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#167 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#168 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U109/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U109/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#169 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U119/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U119/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#170 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U42/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U42/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#171 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U42/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U42/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#172 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U52/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U52/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#173 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U52/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U52/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#174 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#175 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#176 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U89/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U89/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#177 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_11_reg_12055_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_11_reg_12055_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#178 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_13_reg_12085_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_13_reg_12085_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#179 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_14_reg_12090_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_14_reg_12090_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#180 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_18_reg_12165_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_18_reg_12165_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#181 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_19_reg_12200_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_19_reg_12200_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#182 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_1_reg_10371_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_1_reg_10371_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#183 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_20_reg_12210_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_20_reg_12210_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#184 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_21_reg_12235_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_21_reg_12235_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#185 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_2_reg_10496_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_2_reg_10496_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#186 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_4_reg_10721_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_4_reg_10721_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#187 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_5_reg_10736_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_5_reg_10736_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#188 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1118_6_reg_10871_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1118_6_reg_10871_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#189 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1192_4_reg_12100_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1192_4_reg_12100_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#190 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1192_6_reg_12180_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1192_6_reg_12180_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#191 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln1192_7_reg_12220_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln1192_7_reg_12220_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#192 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_11_reg_10451_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_11_reg_10451_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#193 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_12_reg_10461_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_12_reg_10461_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#194 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_13_reg_10466_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_13_reg_10466_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#195 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_16_reg_10506_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_16_reg_10506_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#196 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_17_reg_10511_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_17_reg_10511_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#197 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_19_reg_10541_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_19_reg_10541_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#198 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_20_reg_10551_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_20_reg_10551_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#199 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_21_reg_10556_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_21_reg_10556_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#200 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_24_reg_10586_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_24_reg_10586_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#201 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_25_reg_10596_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_25_reg_10596_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#202 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_26_reg_10601_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_26_reg_10601_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#203 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_28_reg_10631_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_28_reg_10631_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#204 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_29_reg_10641_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_29_reg_10641_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#205 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_2_reg_10361_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_2_reg_10361_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#206 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_30_reg_10646_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_30_reg_10646_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#207 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_32_reg_10676_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_32_reg_10676_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#208 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_33_reg_10686_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_33_reg_10686_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#209 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_34_reg_10691_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_34_reg_10691_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#210 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_37_reg_10731_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_37_reg_10731_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#211 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_39_reg_10766_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_39_reg_10766_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#212 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_3_reg_10376_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_3_reg_10376_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#213 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_40_reg_10776_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_40_reg_10776_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#214 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_41_reg_10781_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_41_reg_10781_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#215 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_44_reg_10811_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_44_reg_10811_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#216 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_45_reg_10821_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_45_reg_10821_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#217 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_46_reg_10826_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_46_reg_10826_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#218 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_49_reg_10856_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_49_reg_10856_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#219 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_50_reg_10866_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_50_reg_10866_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#220 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_55_reg_12045_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_55_reg_12045_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#221 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_57_reg_12060_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_57_reg_12060_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#222 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_58_reg_12070_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_58_reg_12070_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#223 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_60_reg_12075_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_60_reg_12075_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#224 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_63_reg_12105_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_63_reg_12105_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#225 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_65_reg_12110_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_65_reg_12110_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#226 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_66_reg_12120_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_66_reg_12120_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#227 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_67_reg_12125_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_67_reg_12125_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#228 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_68_reg_12130_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_68_reg_12130_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#229 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_6_reg_10406_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_6_reg_10406_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#230 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_71_reg_12140_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_71_reg_12140_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#231 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_72_reg_12150_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_72_reg_12150_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#232 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_73_reg_12155_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_73_reg_12155_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#233 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_75_reg_12175_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_75_reg_12175_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#234 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_77_reg_12190_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_77_reg_12190_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#235 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_78_reg_12195_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_78_reg_12195_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#236 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_7_reg_10416_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_7_reg_10416_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#237 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_81_reg_12215_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_81_reg_12215_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#238 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_84_reg_12230_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_84_reg_12230_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#239 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_87_reg_12245_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_87_reg_12245_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#240 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_88_reg_12250_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_88_reg_12250_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#241 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_89_reg_12255_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_89_reg_12255_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#242 Warning
MREG Output pipelining  
DSP design_1_i/nn_inference_0/inst/mul_ln703_8_reg_10421_reg multiplier stage design_1_i/nn_inference_0/inst/mul_ln703_8_reg_10421_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

REQP-1774#1 Warning
RAMB36E2_WRITE_WIDTH_A_18_doesnt_use_WEA32  
The RAMB36E2 cell design_1_i/axi_bram_ctrl_0_bram/U0/inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.SERIES8_TDP_SP36_NO_ECC_ATTR.ram has WRITE_WIDTH_A set to 18. The WEA[3:2] pins should not be connected to active signal.
Related violations: <none>

REQP-1774#2 Warning
RAMB36E2_WRITE_WIDTH_A_18_doesnt_use_WEA32  
The RAMB36E2 cell design_1_i/axi_bram_ctrl_0_bram/U0/inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[1].ram.r/prim_noinit.ram/DEVICE_8SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.SERIES8_TDP_SP36_NO_ECC_ATTR.ram has WRITE_WIDTH_A set to 18. The WEA[3:2] pins should not be connected to active signal.
Related violations: <none>


