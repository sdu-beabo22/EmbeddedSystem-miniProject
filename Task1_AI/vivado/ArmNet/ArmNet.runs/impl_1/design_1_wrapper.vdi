#-----------------------------------------------------------
# Vivado v2020.2 (64-bit)
# SW Build 3064766 on Wed Nov 18 09:12:47 MST 2020
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
# Start of session at: Thu Dec 29 17:58:27 2022
# Process ID: 22692
# Current directory: /home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1
# Command line: vivado -log design_1_wrapper.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace
# Log file: /home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/design_1_wrapper.vdi
# Journal file: /home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/vivado.jou
#-----------------------------------------------------------
source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/sdu/Documents/embeddedSystems/project/miniproject/FPGA_AI/hls/ArmNet'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2020.2/data/ip'.
add_files: Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 2315.973 ; gain = 16.016 ; free physical = 1288 ; free virtual = 15207
Command: link_design -top design_1_wrapper -part xczu3eg-sbva484-1-i
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xczu3eg-sbva484-1-i
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_axi_bram_ctrl_0_0/design_1_axi_bram_ctrl_0_0.dcp' for cell 'design_1_i/axi_bram_ctrl_0'
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_axi_bram_ctrl_0_bram_1/design_1_axi_bram_ctrl_0_bram_1.dcp' for cell 'design_1_i/axi_bram_ctrl_0_bram'
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/design_1_axi_smc_0.dcp' for cell 'design_1_i/axi_smc'
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_fix_address_0_0/design_1_fix_address_0_0.dcp' for cell 'design_1_i/fix_address_0'
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_nn_ctrl_0_0/design_1_nn_ctrl_0_0.dcp' for cell 'design_1_i/nn_ctrl_0'
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_nn_inference_0_1/design_1_nn_inference_0_1.dcp' for cell 'design_1_i/nn_inference_0'
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_not_gate_0_0/design_1_not_gate_0_0.dcp' for cell 'design_1_i/not_gate_0'
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_100M_0/design_1_rst_ps8_0_100M_0.dcp' for cell 'design_1_i/rst_ps8_0_100M'
INFO: [Project 1-454] Reading design checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.dcp' for cell 'design_1_i/zynq_ultra_ps_e_0'
Netlist sorting complete. Time (s): cpu = 00:00:00.32 ; elapsed = 00:00:00.32 . Memory (MB): peak = 2631.594 ; gain = 0.000 ; free physical = 431 ; free virtual = 14495
INFO: [Netlist 29-17] Analyzing 1470 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Finished Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_100M_0/design_1_rst_ps8_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps8_0_100M/U0'
Finished Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_100M_0/design_1_rst_ps8_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps8_0_100M/U0'
Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_100M_0/design_1_rst_ps8_0_100M_0.xdc] for cell 'design_1_i/rst_ps8_0_100M/U0'
Finished Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_100M_0/design_1_rst_ps8_0_100M_0.xdc] for cell 'design_1_i/rst_ps8_0_100M/U0'
Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.srcs/constrs_1/new/ultra96_v2_ai_constraints.xdc]
Finished Parsing XDC File [/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.srcs/constrs_1/new/ultra96_v2_ai_constraints.xdc]
INFO: [Project 1-1715] 2 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Opt 31-422] The CLOCK_DOMAINS attribute on the BRAM cell design_1_i/axi_bram_ctrl_0_bram/U0/inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.SERIES8_TDP_SP36_NO_ECC_ATTR.ram has been changed from INDEPENDENT to COMMON to match the clocking topology used for the BRAM.
INFO: [Opt 31-422] The CLOCK_DOMAINS attribute on the BRAM cell design_1_i/axi_bram_ctrl_0_bram/U0/inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[1].ram.r/prim_noinit.ram/DEVICE_8SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.SERIES8_TDP_SP36_NO_ECC_ATTR.ram has been changed from INDEPENDENT to COMMON to match the clocking topology used for the BRAM.
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2719.980 ; gain = 0.000 ; free physical = 214 ; free virtual = 14299
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 438 instances were transformed.
  DSP48E2 => DSP48E2 (DSP_ALU, DSP_A_B_DATA, DSP_C_DATA, DSP_MULTIPLIER, DSP_M_DATA, DSP_OUTPUT, DSP_PREADD, DSP_PREADD_DATA): 242 instances
  RAM16X1D => RAM32X1D (RAMD32(x2)): 32 instances
  RAM32M16 => RAM32M16 (RAMD32(x14), RAMS32(x2)): 36 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 32 instances
  RAM64X1D => RAM64X1D (RAMD64E(x2)): 96 instances

22 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:34 ; elapsed = 00:00:45 . Memory (MB): peak = 2719.980 ; gain = 404.008 ; free physical = 214 ; free virtual = 14299
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2804.320 ; gain = 84.340 ; free physical = 193 ; free virtual = 14279

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: b2e3fe1b

Time (s): cpu = 00:00:17 ; elapsed = 00:00:09 . Memory (MB): peak = 3111.602 ; gain = 307.281 ; free physical = 139 ; free virtual = 14012

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 30 inverter(s) to 234 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 15bbffca5

Time (s): cpu = 00:00:06 ; elapsed = 00:00:03 . Memory (MB): peak = 3296.445 ; gain = 0.000 ; free physical = 250 ; free virtual = 13970
INFO: [Opt 31-389] Phase Retarget created 20 cells and removed 331 cells
INFO: [Opt 31-1021] In phase Retarget, 15 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 2 inverter(s) to 3 load pin(s).
Phase 2 Constant propagation | Checksum: 200c07de1

Time (s): cpu = 00:00:06 ; elapsed = 00:00:03 . Memory (MB): peak = 3296.445 ; gain = 0.000 ; free physical = 250 ; free virtual = 13970
INFO: [Opt 31-389] Phase Constant propagation created 22 cells and removed 98 cells
INFO: [Opt 31-1021] In phase Constant propagation, 20 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 21ecf5d64

Time (s): cpu = 00:00:08 ; elapsed = 00:00:04 . Memory (MB): peak = 3296.445 ; gain = 0.000 ; free physical = 255 ; free virtual = 13975
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 1100 cells
INFO: [Opt 31-1021] In phase Sweep, 26 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
INFO: [Opt 31-1077] Phase BUFG optimization inserted 0 global clock buffer(s) for CLOCK_LOW_FANOUT.
Phase 4 BUFG optimization | Checksum: 21ecf5d64

Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 3296.445 ; gain = 0.000 ; free physical = 254 ; free virtual = 13975
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 21ecf5d64

Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 3296.445 ; gain = 0.000 ; free physical = 254 ; free virtual = 13975
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 15e9be512

Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 3296.445 ; gain = 0.000 ; free physical = 254 ; free virtual = 13975
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 2 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 15 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              20  |             331  |                                             15  |
|  Constant propagation         |              22  |              98  |                                             20  |
|  Sweep                        |               0  |            1100  |                                             26  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               2  |                                             15  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.04 . Memory (MB): peak = 3296.445 ; gain = 0.000 ; free physical = 254 ; free virtual = 13975
Ending Logic Optimization Task | Checksum: 14461ab1d

Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 3296.445 ; gain = 0.000 ; free physical = 254 ; free virtual = 13975

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 4 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 0 Total Ports: 8
Ending PowerOpt Patch Enables Task | Checksum: 14461ab1d

Time (s): cpu = 00:00:00.26 ; elapsed = 00:00:00.28 . Memory (MB): peak = 4045.730 ; gain = 0.000 ; free physical = 487 ; free virtual = 13545
Ending Power Optimization Task | Checksum: 14461ab1d

Time (s): cpu = 00:00:37 ; elapsed = 00:00:36 . Memory (MB): peak = 4045.730 ; gain = 749.285 ; free physical = 526 ; free virtual = 13585

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 14461ab1d

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4045.730 ; gain = 0.000 ; free physical = 526 ; free virtual = 13585

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4045.730 ; gain = 0.000 ; free physical = 526 ; free virtual = 13585
Ending Netlist Obfuscation Task | Checksum: 14461ab1d

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4045.730 ; gain = 0.000 ; free physical = 526 ; free virtual = 13585
INFO: [Common 17-83] Releasing license: Implementation
49 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:10 ; elapsed = 00:00:57 . Memory (MB): peak = 4045.730 ; gain = 1325.750 ; free physical = 526 ; free virtual = 13585
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.16 ; elapsed = 00:00:00.06 . Memory (MB): peak = 4045.730 ; gain = 0.000 ; free physical = 522 ; free virtual = 13585
INFO: [Common 17-1381] The checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:09 ; elapsed = 00:00:07 . Memory (MB): peak = 4045.730 ; gain = 0.000 ; free physical = 509 ; free virtual = 13578
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:49 ; elapsed = 00:00:31 . Memory (MB): peak = 4532.883 ; gain = 487.152 ; free physical = 203 ; free virtual = 12982
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
WARNING: [Vivado_Tcl 4-1400] -ultrathreads option currently only supported on multi-SLR devices. Continuing placement in regular mode.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4532.883 ; gain = 0.000 ; free physical = 190 ; free virtual = 12970
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: f3d87d24

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.04 . Memory (MB): peak = 4532.883 ; gain = 0.000 ; free physical = 190 ; free virtual = 12970
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4532.883 ; gain = 0.000 ; free physical = 190 ; free virtual = 12970

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 15e514a7f

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 4532.883 ; gain = 0.000 ; free physical = 248 ; free virtual = 13045

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 165de1600

Time (s): cpu = 00:00:20 ; elapsed = 00:00:10 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 330 ; free virtual = 12988

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 165de1600

Time (s): cpu = 00:00:20 ; elapsed = 00:00:10 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 330 ; free virtual = 12988
Phase 1 Placer Initialization | Checksum: 165de1600

Time (s): cpu = 00:00:21 ; elapsed = 00:00:11 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 330 ; free virtual = 12987

Phase 2 Global Placement

Phase 2.1 Floorplanning

Phase 2.1.1 Partition Driven Placement

Phase 2.1.1.1 PBP: Partition Driven Placement
Phase 2.1.1.1 PBP: Partition Driven Placement | Checksum: 23e889a4f

Time (s): cpu = 00:00:31 ; elapsed = 00:00:15 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 321 ; free virtual = 12979

Phase 2.1.1.2 PBP: Clock Region Placement
Phase 2.1.1.2 PBP: Clock Region Placement | Checksum: 1906e3e1e

Time (s): cpu = 00:00:31 ; elapsed = 00:00:15 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 312 ; free virtual = 12972

Phase 2.1.1.3 PBP: Compute Congestion
Phase 2.1.1.3 PBP: Compute Congestion | Checksum: 1906e3e1e

Time (s): cpu = 00:00:31 ; elapsed = 00:00:16 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 300 ; free virtual = 12960

Phase 2.1.1.4 PBP: UpdateTiming
Phase 2.1.1.4 PBP: UpdateTiming | Checksum: 210429a3a

Time (s): cpu = 00:00:33 ; elapsed = 00:00:16 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 300 ; free virtual = 12960

Phase 2.1.1.5 PBP: Add part constraints
Phase 2.1.1.5 PBP: Add part constraints | Checksum: 210429a3a

Time (s): cpu = 00:00:33 ; elapsed = 00:00:17 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 300 ; free virtual = 12960
Phase 2.1.1 Partition Driven Placement | Checksum: 210429a3a

Time (s): cpu = 00:00:33 ; elapsed = 00:00:17 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 300 ; free virtual = 12960
Phase 2.1 Floorplanning | Checksum: 22779ad3a

Time (s): cpu = 00:00:33 ; elapsed = 00:00:17 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 300 ; free virtual = 12960

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 22779ad3a

Time (s): cpu = 00:00:33 ; elapsed = 00:00:17 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 300 ; free virtual = 12960

Phase 2.3 Global Placement Core

Phase 2.3.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 350 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-775] End 1 Pass. Optimized 132 nets or cells. Created 0 new cell, deleted 132 existing cells and moved 0 existing cell
INFO: [Physopt 32-1030] Pass 1. Identified 15 candidate driver sets for equivalent driver rewiring.
INFO: [Physopt 32-661] Optimized 10 nets.  Re-placed 63 instances.
INFO: [Physopt 32-775] End 1 Pass. Optimized 10 nets or cells. Created 0 new cell, deleted 0 existing cell and moved 63 existing cells
Netlist sorting complete. Time (s): cpu = 00:00:00.14 ; elapsed = 00:00:00.14 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 231 ; free virtual = 12941
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 231 ; free virtual = 12941

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            132  |                   132  |           0  |           1  |  00:00:00  |
|  Equivalent Driver Rewiring                       |            0  |              0  |                    10  |           0  |           1  |  00:00:01  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            132  |                   142  |           0  |           4  |  00:00:01  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.3.1 Physical Synthesis In Placer | Checksum: e71033df

Time (s): cpu = 00:01:06 ; elapsed = 00:00:35 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 219 ; free virtual = 12936
Phase 2.3 Global Placement Core | Checksum: 1831731d8

Time (s): cpu = 00:01:08 ; elapsed = 00:00:36 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 208 ; free virtual = 12925
Phase 2 Global Placement | Checksum: 1831731d8

Time (s): cpu = 00:01:09 ; elapsed = 00:00:36 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 216 ; free virtual = 12933

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 127c7728e

Time (s): cpu = 00:01:10 ; elapsed = 00:00:37 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 216 ; free virtual = 12933

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 13359ff5a

Time (s): cpu = 00:01:14 ; elapsed = 00:00:40 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 208 ; free virtual = 12930

Phase 3.3 Small Shape DP

Phase 3.3.1 Small Shape Clustering
Phase 3.3.1 Small Shape Clustering | Checksum: 1609a65eb

Time (s): cpu = 00:01:16 ; elapsed = 00:00:41 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 192 ; free virtual = 12914

Phase 3.3.2 Flow Legalize Slice Clusters
Phase 3.3.2 Flow Legalize Slice Clusters | Checksum: 140ec1495

Time (s): cpu = 00:01:16 ; elapsed = 00:00:41 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 189 ; free virtual = 12911

Phase 3.3.3 Slice Area Swap
Phase 3.3.3 Slice Area Swap | Checksum: 166c5c967

Time (s): cpu = 00:01:17 ; elapsed = 00:00:42 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 189 ; free virtual = 12911
Phase 3.3 Small Shape DP | Checksum: 138274631

Time (s): cpu = 00:01:20 ; elapsed = 00:00:44 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 200 ; free virtual = 12922

Phase 3.4 Re-assign LUT pins
Phase 3.4 Re-assign LUT pins | Checksum: 171a5ae7f

Time (s): cpu = 00:01:21 ; elapsed = 00:00:45 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 205 ; free virtual = 12926

Phase 3.5 Pipeline Register Optimization
Phase 3.5 Pipeline Register Optimization | Checksum: c61a5ba0

Time (s): cpu = 00:01:22 ; elapsed = 00:00:45 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 205 ; free virtual = 12926
Phase 3 Detail Placement | Checksum: c61a5ba0

Time (s): cpu = 00:01:22 ; elapsed = 00:00:45 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 205 ; free virtual = 12926

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: f5a655fb

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 4 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=3.705 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 15f46350b

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.70 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 181 ; free virtual = 12903
INFO: [Place 46-56] BUFG insertion identified 0 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: b35fa6e3

Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.76 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 181 ; free virtual = 12902
Phase 4.1.1.1 BUFG Insertion | Checksum: f5a655fb

Time (s): cpu = 00:01:50 ; elapsed = 00:00:57 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 181 ; free virtual = 12902
INFO: [Place 30-746] Post Placement Timing Summary WNS=3.705. For the most accurate timing information please run report_timing.

Time (s): cpu = 00:01:52 ; elapsed = 00:00:57 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 180 ; free virtual = 12902
Phase 4.1 Post Commit Optimization | Checksum: afb807a4

Time (s): cpu = 00:01:52 ; elapsed = 00:00:58 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 180 ; free virtual = 12902
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 170 ; free virtual = 12893

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1a353cf30

Time (s): cpu = 00:01:53 ; elapsed = 00:00:59 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 170 ; free virtual = 12893

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ________________________________________________________________________
|           | Global Congestion | Long Congestion   | Short Congestion  |
| Direction | Region Size       | Region Size       | Region Size       |
|___________|___________________|___________________|___________________|
|      North|                2x2|                1x1|                4x4|
|___________|___________________|___________________|___________________|
|      South|                1x1|                1x1|                4x4|
|___________|___________________|___________________|___________________|
|       East|                1x1|                1x1|                4x4|
|___________|___________________|___________________|___________________|
|       West|                1x1|                1x1|                4x4|
|___________|___________________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 1a353cf30

Time (s): cpu = 00:01:54 ; elapsed = 00:01:00 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 170 ; free virtual = 12893
Phase 4.3 Placer Reporting | Checksum: 1a353cf30

Time (s): cpu = 00:01:54 ; elapsed = 00:01:00 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 170 ; free virtual = 12894

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 170 ; free virtual = 12894

Time (s): cpu = 00:01:54 ; elapsed = 00:01:00 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 170 ; free virtual = 12894
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1f42fe36a

Time (s): cpu = 00:01:54 ; elapsed = 00:01:00 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 170 ; free virtual = 12894
Ending Placer Task | Checksum: 16d2723ba

Time (s): cpu = 00:01:54 ; elapsed = 00:01:00 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 170 ; free virtual = 12893
INFO: [Common 17-83] Releasing license: Implementation
87 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:59 ; elapsed = 00:01:03 . Memory (MB): peak = 4556.895 ; gain = 24.012 ; free physical = 213 ; free virtual = 12936
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 162 ; free virtual = 12942
INFO: [Common 17-1381] The checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 208 ; free virtual = 12925
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.14 ; elapsed = 00:00:00.30 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 193 ; free virtual = 12910
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.11 ; elapsed = 00:00:00.21 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 192 ; free virtual = 12910
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
96 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:13 ; elapsed = 00:00:05 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 167 ; free virtual = 12889
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 138 ; free virtual = 12870
INFO: [Common 17-1381] The checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 209 ; free virtual = 12882
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs
Checksum: PlaceDB: 21107fdf ConstDB: 0 ShapeSum: 587adc4f RouteDB: f39bc78c

Phase 1 Build RT Design
Nodegraph reading from file.  Time (s): cpu = 00:00:00.46 ; elapsed = 00:00:00.53 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 143 ; free virtual = 12788
Phase 1 Build RT Design | Checksum: 170a4fe01

Time (s): cpu = 00:00:15 ; elapsed = 00:00:06 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 134 ; free virtual = 12782
Post Restoration Checksum: NetGraph: f6363e7b NumContArr: 6552fb73 Constraints: 3515915d Timing: 0

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 1909ecb4b

Time (s): cpu = 00:00:16 ; elapsed = 00:00:06 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 122 ; free virtual = 12771

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 1909ecb4b

Time (s): cpu = 00:00:16 ; elapsed = 00:00:06 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 122 ; free virtual = 12771

Phase 2.3 Global Clock Net Routing
 Number of Nodes with overlaps = 0
Phase 2.3 Global Clock Net Routing | Checksum: 14fec482a

Time (s): cpu = 00:00:17 ; elapsed = 00:00:07 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 156 ; free virtual = 12763

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: e0fbf17d

Time (s): cpu = 00:00:24 ; elapsed = 00:00:10 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 151 ; free virtual = 12760
INFO: [Route 35-416] Intermediate Timing Summary | WNS=3.909  | TNS=0.000  | WHS=-0.050 | THS=-4.479 |

Phase 2 Router Initialization | Checksum: 1c005d76f

Time (s): cpu = 00:00:43 ; elapsed = 00:00:18 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 217 ; free virtual = 12762

Router Utilization Summary
  Global Vertical Routing Utilization    = 0.00139062 %
  Global Horizontal Routing Utilization  = 0.00262674 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 24655
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 21760
  Number of Partially Routed Nets     = 2895
  Number of Node Overlaps             = 52


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 1c005d76f

Time (s): cpu = 00:00:44 ; elapsed = 00:00:19 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 207 ; free virtual = 12752
Phase 3 Initial Routing | Checksum: 1a235718b

Time (s): cpu = 00:00:51 ; elapsed = 00:00:22 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 170 ; free virtual = 12715

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 3179
 Number of Nodes with overlaps = 239
 Number of Nodes with overlaps = 24
 Number of Nodes with overlaps = 7
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=2.950  | TNS=0.000  | WHS=0.015  | THS=0.000  |

Phase 4.1 Global Iteration 0 | Checksum: 289934b72

Time (s): cpu = 00:01:40 ; elapsed = 00:00:51 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 133 ; free virtual = 12725

Phase 4.2 Additional Iteration for Hold
Phase 4.2 Additional Iteration for Hold | Checksum: 2644c4766

Time (s): cpu = 00:01:40 ; elapsed = 00:00:51 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 133 ; free virtual = 12725
Phase 4 Rip-up And Reroute | Checksum: 2644c4766

Time (s): cpu = 00:01:40 ; elapsed = 00:00:51 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 133 ; free virtual = 12725

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 1f08a358f

Time (s): cpu = 00:01:41 ; elapsed = 00:00:52 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 134 ; free virtual = 12726

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1f08a358f

Time (s): cpu = 00:01:41 ; elapsed = 00:00:52 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 134 ; free virtual = 12726
Phase 5 Delay and Skew Optimization | Checksum: 1f08a358f

Time (s): cpu = 00:01:41 ; elapsed = 00:00:52 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 134 ; free virtual = 12726

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 151567b64

Time (s): cpu = 00:01:48 ; elapsed = 00:00:55 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 134 ; free virtual = 12726
INFO: [Route 35-416] Intermediate Timing Summary | WNS=2.950  | TNS=0.000  | WHS=0.015  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 151567b64

Time (s): cpu = 00:01:48 ; elapsed = 00:00:55 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 134 ; free virtual = 12726
Phase 6 Post Hold Fix | Checksum: 151567b64

Time (s): cpu = 00:01:48 ; elapsed = 00:00:55 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 134 ; free virtual = 12726

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 3.95267 %
  Global Horizontal Routing Utilization  = 4.63521 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1613093c7

Time (s): cpu = 00:01:49 ; elapsed = 00:00:55 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 134 ; free virtual = 12725

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1613093c7

Time (s): cpu = 00:01:49 ; elapsed = 00:00:55 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 129 ; free virtual = 12722

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1613093c7

Time (s): cpu = 00:01:50 ; elapsed = 00:00:56 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 129 ; free virtual = 12722

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=2.950  | TNS=0.000  | WHS=0.015  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 1613093c7

Time (s): cpu = 00:01:51 ; elapsed = 00:00:57 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 130 ; free virtual = 12722
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:51 ; elapsed = 00:00:57 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 174 ; free virtual = 12767

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
110 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:02:04 ; elapsed = 00:01:02 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 174 ; free virtual = 12768
INFO: [Common 17-600] The following parameters have non-default value.
general.maxThreads
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 148 ; free virtual = 12779
INFO: [Common 17-1381] The checkpoint '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 213 ; free virtual = 12774
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:25 ; elapsed = 00:00:08 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 151 ; free virtual = 12712
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 4 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:19 ; elapsed = 00:00:07 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 153 ; free virtual = 12716
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
123 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:21 ; elapsed = 00:00:12 . Memory (MB): peak = 4556.895 ; gain = 0.000 ; free physical = 130 ; free virtual = 12671
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Temperature grade: I, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Temperature grade: I, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xczu3eg'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu3eg'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 input design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U73/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U74/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U75/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U76/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U76/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U79/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U80/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U80/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U81/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U81/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U82/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U84/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U84/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U86/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U87/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U90/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U90/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U92/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U93/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U93/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U94/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U94/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U95/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U95/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U96/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U96/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U97/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U98/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U99/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p input design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U99/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U107/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U109/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U109/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U119/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U119/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0 input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U83/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U89/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p input design_1_i/nn_inference_0/inst/mul_9s_32s_40_1_1_U89/nn_inference_mul_9s_32s_40_1_1_Multiplier_3_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1118_11_reg_12055_reg input design_1_i/nn_inference_0/inst/mul_ln1118_11_reg_12055_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1118_13_reg_12085_reg input design_1_i/nn_inference_0/inst/mul_ln1118_13_reg_12085_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1118_14_reg_12090_reg input design_1_i/nn_inference_0/inst/mul_ln1118_14_reg_12090_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1118_18_reg_12165_reg input design_1_i/nn_inference_0/inst/mul_ln1118_18_reg_12165_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1118_19_reg_12200_reg input design_1_i/nn_inference_0/inst/mul_ln1118_19_reg_12200_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1118_20_reg_12210_reg input design_1_i/nn_inference_0/inst/mul_ln1118_20_reg_12210_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1118_21_reg_12235_reg input design_1_i/nn_inference_0/inst/mul_ln1118_21_reg_12235_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1192_4_reg_12100_reg input design_1_i/nn_inference_0/inst/mul_ln1192_4_reg_12100_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1192_6_reg_12180_reg input design_1_i/nn_inference_0/inst/mul_ln1192_6_reg_12180_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln1192_7_reg_12220_reg input design_1_i/nn_inference_0/inst/mul_ln1192_7_reg_12220_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_55_reg_12045_reg input design_1_i/nn_inference_0/inst/mul_ln703_55_reg_12045_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_57_reg_12060_reg input design_1_i/nn_inference_0/inst/mul_ln703_57_reg_12060_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_58_reg_12070_reg input design_1_i/nn_inference_0/inst/mul_ln703_58_reg_12070_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_60_reg_12075_reg input design_1_i/nn_inference_0/inst/mul_ln703_60_reg_12075_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_63_reg_12105_reg input design_1_i/nn_inference_0/inst/mul_ln703_63_reg_12105_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_65_reg_12110_reg input design_1_i/nn_inference_0/inst/mul_ln703_65_reg_12110_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_66_reg_12120_reg input design_1_i/nn_inference_0/inst/mul_ln703_66_reg_12120_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_67_reg_12125_reg input design_1_i/nn_inference_0/inst/mul_ln703_67_reg_12125_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_68_reg_12130_reg input design_1_i/nn_inference_0/inst/mul_ln703_68_reg_12130_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/nn_inference_0/inst/mul_ln703_71_reg_12140_reg input design_1_i/nn_inference_0/inst/mul_ln703_71_reg_12140_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U23/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U23/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U48/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U48/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U50/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U50/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U65/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U65/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U9/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U9/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 output design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U10/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U10/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U13/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U13/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U14/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U14/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U15/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U15/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U18/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U18/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U19/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U19/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U20/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U20/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U24/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U24/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U25/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U25/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U28/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U28/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U29/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U29/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U30/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U30/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U33/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U33/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U34/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U34/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U35/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U35/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U38/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U38/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U39/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U39/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U40/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U40/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U43/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U43/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U44/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U44/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U45/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U45/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p output design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
INFO: [Common 17-14] Message 'DRC DPOP-3' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U103/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U123/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_38_1_1_U127/nn_inference_mul_7s_32s_38_1_1_Multiplier_8_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U101/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U115/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U23/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U23/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U36/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U48/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U48/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U50/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U50/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U65/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U65/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U66/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U77/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U78/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U88/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U9/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U9/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_7s_32s_39_1_1_U91/nn_inference_mul_7s_32s_39_1_1_Multiplier_1_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U105/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U114/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_39_1_1_U85/nn_inference_mul_8s_32s_39_1_1_Multiplier_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U10/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U10/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U100/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U102/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U104/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U106/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U108/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U11/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U110/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U111/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U112/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U113/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U116/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U117/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U118/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U12/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U120/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U121/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U122/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U124/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U125/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U126/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U13/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U13/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U14/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U14/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U15/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U15/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U16/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U17/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U18/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U18/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U19/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U19/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U20/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U20/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U21/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U22/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U24/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U24/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U25/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U25/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U26/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U28/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U28/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U29/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U29/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U3/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U30/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U30/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U31/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U32/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U33/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U33/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U34/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U34/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U35/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U35/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U37/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U38/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U38/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U39/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U39/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U4/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U40/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U40/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0 multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U41/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U43/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U43/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U44/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U44/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U45/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U45/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p multiplier stage design_1_i/nn_inference_0/inst/mul_8s_32s_40_1_1_U46/nn_inference_mul_8s_32s_40_1_1_Multiplier_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-4' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDRC-153] Gated clock check: Net design_1_i/nn_ctrl_0/inst/start_signal is a gated clock net sourced by a combinational pin design_1_i/nn_ctrl_0/inst//i_/O, cell design_1_i/nn_ctrl_0/inst//i_. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC REQP-1774] RAMB36E2_WRITE_WIDTH_A_18_doesnt_use_WEA32: The RAMB36E2 cell design_1_i/axi_bram_ctrl_0_bram/U0/inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_8SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.SERIES8_TDP_SP36_NO_ECC_ATTR.ram has WRITE_WIDTH_A set to 18. The WEA[3:2] pins should not be connected to active signal.
WARNING: [DRC REQP-1774] RAMB36E2_WRITE_WIDTH_A_18_doesnt_use_WEA32: The RAMB36E2 cell design_1_i/axi_bram_ctrl_0_bram/U0/inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[1].ram.r/prim_noinit.ram/DEVICE_8SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.SERIES8_TDP_SP36_NO_ECC_ATTR.ram has WRITE_WIDTH_A set to 18. The WEA[3:2] pins should not be connected to active signal.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 531 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 4 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] '/home/sdu/Documents/embeddedSystems/project/miniproject/vivado/ArmNet/ArmNet.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Thu Dec 29 18:04:53 2022. For additional details about this file, please refer to the WebTalk help file at /tools/Xilinx/Vivado/2020.2/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
21 Infos, 303 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:24 ; elapsed = 00:00:30 . Memory (MB): peak = 4686.383 ; gain = 129.488 ; free physical = 231 ; free virtual = 12622
INFO: [Common 17-206] Exiting Vivado at Thu Dec 29 18:04:53 2022...
