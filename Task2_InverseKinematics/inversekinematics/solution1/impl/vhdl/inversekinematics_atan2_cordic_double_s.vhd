-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity inversekinematics_atan2_cordic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    y_in : IN STD_LOGIC_VECTOR (63 downto 0);
    x_in : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_272_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_272_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_272_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_272_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_272_p_ce : OUT STD_LOGIC );
end;


architecture behav of inversekinematics_atan2_cordic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_3FE921FB54442D18 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111101001001000011111101101010100010001000010110100011000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_C002D97C7F3321D2 : STD_LOGIC_VECTOR (63 downto 0) := "1100000000000010110110010111110001111111001100110010000111010010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv64_4002D97C7F3321D2 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000010110110010111110001111111001100110010000111010010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv64_BFE921FB54442D18 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111101001001000011111101101010100010001000010110100011000";
    constant ap_const_lv64_C00921FB54442D18 : STD_LOGIC_VECTOR (63 downto 0) := "1100000000001001001000011111101101010100010001000010110100011000";
    constant ap_const_lv64_400921FB54442D18 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000001001001000011111101101010100010001000010110100011000";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_3FF921FB54442D18 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111001001000011111101101010100010001000010110100011000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_BFF921FB54442D18 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111111001001000011111101101010100010001000010110100011000";
    constant ap_const_lv63_3FF921FB54442D18 : STD_LOGIC_VECTOR (62 downto 0) := "011111111111001001000011111101101010100010001000010110100011000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_400921FB54442D18 : STD_LOGIC_VECTOR (62 downto 0) := "100000000001001001000011111101101010100010001000010110100011000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_atan2_generic_double_s_fu_163_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_182 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal p_Result_32_fu_218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_32_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_reg_527 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_532 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_1_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln828_1_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_541 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_3_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_3_reg_545 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln762_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln762_reg_549 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_4_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_4_reg_553 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln766_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln766_reg_557 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_312_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_reg_561 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln18_2_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_2_reg_565 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_3_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_3_reg_569 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_reg_573 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_fu_353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal b_reg_580 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln746_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln746_reg_590 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_5_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln746_1_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln746_1_reg_595 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_171_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_i_reg_603 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal d_reg_608 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal bitcast_ln822_1_fu_422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln809_fu_440_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal bitcast_ln521_5_fu_454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal bitcast_ln521_4_fu_465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal bitcast_ln521_3_fu_476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal bitcast_ln521_2_fu_487_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal bitcast_ln521_1_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal bitcast_ln521_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_atan2_generic_double_s_fu_163_ap_start : STD_LOGIC;
    signal grp_atan2_generic_double_s_fu_163_ap_done : STD_LOGIC;
    signal grp_atan2_generic_double_s_fu_163_ap_idle : STD_LOGIC;
    signal grp_atan2_generic_double_s_fu_163_ap_ready : STD_LOGIC;
    signal grp_atan2_generic_double_s_fu_163_y_in : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_atan2_generic_double_s_fu_163_x_in : STD_LOGIC_VECTOR (63 downto 0);
    signal c_reg_82 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 : STD_LOGIC_VECTOR (63 downto 0);
    signal UnifiedRetVal_reg_96 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln826_1_fu_435_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_atan2_generic_double_s_fu_163_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_171_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_171_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fu_178_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_2_fu_214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_226_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_53_fu_236_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln824_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln828_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_200_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_51_fu_210_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln824_2_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln828_1_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_39_fu_332_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_40_fu_345_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln368_1_fu_349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_41_fu_358_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_42_fu_366_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal or_ln746_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln746_1_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln746_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln822_fu_412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln822_fu_416_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln826_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln826_fu_429_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_38_fu_447_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_37_fu_458_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_36_fu_469_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_35_fu_480_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_34_fu_491_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_33_fu_502_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_171_ce : STD_LOGIC;
    signal and_ln746_1_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_condition_647 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component inversekinematics_atan2_generic_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        y_in : IN STD_LOGIC_VECTOR (63 downto 0);
        x_in : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component inversekinematics_dsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component inversekinematics_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_atan2_generic_double_s_fu_163 : component inversekinematics_atan2_generic_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_atan2_generic_double_s_fu_163_ap_start,
        ap_done => grp_atan2_generic_double_s_fu_163_ap_done,
        ap_idle => grp_atan2_generic_double_s_fu_163_ap_idle,
        ap_ready => grp_atan2_generic_double_s_fu_163_ap_ready,
        y_in => grp_atan2_generic_double_s_fu_163_y_in,
        x_in => grp_atan2_generic_double_s_fu_163_x_in,
        ap_return => grp_atan2_generic_double_s_fu_163_ap_return);

    dcmp_64ns_64ns_1_2_no_dsp_1_U51 : component inversekinematics_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_178_p0,
        din1 => grp_fu_178_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_178_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_108_p42;
                end if; 
            end if;
        end if;
    end process;


    grp_atan2_generic_double_s_fu_163_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_atan2_generic_double_s_fu_163_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_atan2_generic_double_s_fu_163_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_atan2_generic_double_s_fu_163_ap_ready = ap_const_logic_1)) then 
                    grp_atan2_generic_double_s_fu_163_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_1_fu_282_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_fu_258_p2) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                UnifiedRetVal_reg_96 <= bitcast_ln521_5_fu_454_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                UnifiedRetVal_reg_96 <= bitcast_ln521_4_fu_465_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                UnifiedRetVal_reg_96 <= bitcast_ln521_3_fu_476_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                UnifiedRetVal_reg_96 <= bitcast_ln521_2_fu_487_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                UnifiedRetVal_reg_96 <= bitcast_ln521_1_fu_498_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                UnifiedRetVal_reg_96 <= bitcast_ln521_fu_509_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                UnifiedRetVal_reg_96 <= select_ln809_fu_440_p3;
            elsif (((tmp_s_fu_312_p3 = ap_const_lv2_0) and (icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_0;
            elsif (((tmp_s_fu_312_p3 = ap_const_lv2_0) and (icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_3_fu_326_p2) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_3FE921FB54442D18;
            elsif (((tmp_s_reg_561 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                UnifiedRetVal_reg_96 <= c_reg_82;
            elsif (((tmp_s_reg_561 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                UnifiedRetVal_reg_96 <= bitcast_ln822_1_fu_422_p1;
            elsif (((tmp_s_reg_561 = ap_const_lv2_2) and (icmp_ln824_4_reg_553 = ap_const_lv1_0) and (icmp_ln824_3_reg_545 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_2_reg_565) and (ap_const_lv1_0 = and_ln766_reg_557) and (ap_const_lv1_0 = and_ln762_reg_549) and (ap_const_lv1_0 = and_ln18_1_reg_541) and (ap_const_lv1_0 = and_ln18_reg_532) and (ap_const_lv1_0 = and_ln18_3_reg_569) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                UnifiedRetVal_reg_96 <= d_reg_608;
            elsif (((tmp_s_reg_561 = ap_const_lv2_3) and (icmp_ln824_4_reg_553 = ap_const_lv1_0) and (icmp_ln824_3_reg_545 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_2_reg_565) and (ap_const_lv1_0 = and_ln766_reg_557) and (ap_const_lv1_0 = and_ln762_reg_549) and (ap_const_lv1_0 = and_ln18_1_reg_541) and (ap_const_lv1_0 = and_ln18_reg_532) and (ap_const_lv1_0 = and_ln18_3_reg_569) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                UnifiedRetVal_reg_96 <= bitcast_ln826_1_fu_435_p1;
            elsif (((tmp_s_fu_312_p3 = ap_const_lv2_1) and (icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_8000000000000000;
            elsif (((tmp_s_fu_312_p3 = ap_const_lv2_2) and (icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_400921FB54442D18;
            elsif (((tmp_s_fu_312_p3 = ap_const_lv2_3) and (icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_C00921FB54442D18;
            elsif (((tmp_s_fu_312_p3 = ap_const_lv2_1) and (icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_3_fu_326_p2) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_BFE921FB54442D18;
            elsif (((tmp_s_fu_312_p3 = ap_const_lv2_2) and (icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_3_fu_326_p2) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_4002D97C7F3321D2;
            elsif (((tmp_s_fu_312_p3 = ap_const_lv2_3) and (icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_3_fu_326_p2) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                UnifiedRetVal_reg_96 <= ap_const_lv64_C002D97C7F3321D2;
            end if; 
        end if;
    end process;

    c_reg_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln18_2_fu_320_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln824_5_fu_374_p2 = ap_const_lv1_1))) then 
                c_reg_82 <= ap_const_lv64_3FE921FB54442D18;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_atan2_generic_double_s_fu_163_ap_done = ap_const_logic_1))) then 
                c_reg_82 <= grp_atan2_generic_double_s_fu_163_ap_return;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                c_reg_82 <= sub_i_reg_603;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln18_2_fu_320_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    a_reg_573(62 downto 0) <= a_fu_340_p1(62 downto 0);
                    b_reg_580(62 downto 0) <= b_fu_353_p1(62 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln18_1_reg_541 <= and_ln18_1_fu_282_p2;
                icmp_ln828_1_reg_536 <= icmp_ln828_1_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln18_2_reg_565 <= and_ln18_2_fu_320_p2;
                and_ln18_3_reg_569 <= and_ln18_3_fu_326_p2;
                tmp_s_reg_561 <= tmp_s_fu_312_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                and_ln18_reg_532 <= and_ln18_fu_258_p2;
                icmp_ln828_reg_527 <= icmp_ln828_fu_246_p2;
                p_Result_32_reg_516 <= data_V_2_fu_214_p1(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln762_reg_549 <= and_ln762_fu_294_p2;
                icmp_ln824_3_reg_545 <= icmp_ln824_3_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln766_reg_557 <= and_ln766_fu_306_p2;
                icmp_ln824_4_reg_553 <= icmp_ln824_4_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                d_reg_608 <= grp_fu_272_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln18_2_fu_320_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln824_5_fu_374_p2 = ap_const_lv1_0))) then
                icmp_ln746_1_reg_595 <= icmp_ln746_1_fu_386_p2;
                icmp_ln746_reg_590 <= icmp_ln746_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_182 <= grp_atan2_generic_double_s_fu_163_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                sub_i_reg_603 <= grp_fu_272_p_dout0;
            end if;
        end if;
    end process;
    a_reg_573(63) <= '0';
    b_reg_580(63) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state6, and_ln18_fu_258_p2, and_ln18_1_fu_282_p2, icmp_ln824_3_fu_288_p2, and_ln762_fu_294_p2, icmp_ln824_4_fu_300_p2, and_ln766_fu_306_p2, and_ln18_2_fu_320_p2, and_ln18_3_fu_326_p2, icmp_ln824_5_fu_374_p2, grp_atan2_generic_double_s_fu_163_ap_done, p_Result_s_fu_192_p3, ap_CS_fsm_state2, and_ln746_1_fu_406_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (p_Result_s_fu_192_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln762_fu_294_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                elsif (((ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (p_Result_s_fu_192_p3 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln762_fu_294_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                elsif (((icmp_ln824_3_fu_288_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (p_Result_s_fu_192_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((icmp_ln824_3_fu_288_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (p_Result_s_fu_192_p3 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln18_2_fu_320_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln824_5_fu_374_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_3_fu_326_p2) and (ap_const_lv1_0 = and_ln18_2_fu_320_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln824_5_fu_374_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_2_fu_320_p2) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln18_3_fu_326_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((icmp_ln824_4_fu_300_p2 = ap_const_lv1_1) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_0 = and_ln18_1_fu_282_p2) and (ap_const_lv1_0 = and_ln18_fu_258_p2) and (ap_start = ap_const_logic_1) and (ap_const_lv1_1 = and_ln766_fu_306_p2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((ap_const_lv1_1 = and_ln18_fu_258_p2) or ((ap_const_lv1_1 = and_ln18_1_fu_282_p2) or ((icmp_ln824_4_fu_300_p2 = ap_const_lv1_0) and (icmp_ln824_3_fu_288_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln766_fu_306_p2) and (ap_const_lv1_0 = and_ln762_fu_294_p2) and (ap_const_lv1_1 = and_ln18_2_fu_320_p2)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_lv1_1 = and_ln746_1_fu_406_p2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_atan2_generic_double_s_fu_163_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_atan2_generic_double_s_fu_163_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_fu_340_p1 <= zext_ln368_fu_336_p1;
    and_ln18_1_fu_282_p2 <= (xor_ln828_1_fu_276_p2 and icmp_ln824_2_fu_264_p2);
    and_ln18_2_fu_320_p2 <= (icmp_ln828_1_fu_270_p2 and icmp_ln824_2_fu_264_p2);
    and_ln18_3_fu_326_p2 <= (icmp_ln828_fu_246_p2 and icmp_ln824_fu_240_p2);
    and_ln18_fu_258_p2 <= (xor_ln828_fu_252_p2 and icmp_ln824_fu_240_p2);
    and_ln746_1_fu_406_p2 <= (grp_fu_178_p2 and and_ln746_fu_400_p2);
    and_ln746_fu_400_p2 <= (or_ln746_fu_392_p2 and or_ln746_1_fu_396_p2);
    and_ln762_fu_294_p2 <= (icmp_ln828_fu_246_p2 and icmp_ln824_3_fu_288_p2);
    and_ln766_fu_306_p2 <= (icmp_ln828_1_fu_270_p2 and icmp_ln824_4_fu_300_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_condition_647_assign_proc : process(and_ln18_reg_532, and_ln18_1_reg_541, icmp_ln824_3_reg_545, and_ln762_reg_549, icmp_ln824_4_reg_553, and_ln766_reg_557, and_ln18_2_reg_565, and_ln18_3_reg_569, ap_CS_fsm_state18)
    begin
                ap_condition_647 <= ((icmp_ln824_4_reg_553 = ap_const_lv1_0) and (icmp_ln824_3_reg_545 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln18_2_reg_565) and (ap_const_lv1_0 = and_ln766_reg_557) and (ap_const_lv1_0 = and_ln762_reg_549) and (ap_const_lv1_0 = and_ln18_1_reg_541) and (ap_const_lv1_0 = and_ln18_reg_532) and (ap_const_lv1_0 = and_ln18_3_reg_569) and (ap_const_logic_1 = ap_CS_fsm_state18));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_108_p42_assign_proc : process(tmp_s_reg_561, d_reg_608, UnifiedRetVal_reg_96, bitcast_ln826_1_fu_435_p1, ap_condition_647)
    begin
        if ((ap_const_boolean_1 = ap_condition_647)) then
            if ((tmp_s_reg_561 = ap_const_lv2_2)) then 
                ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 <= d_reg_608;
            elsif ((tmp_s_reg_561 = ap_const_lv2_3)) then 
                ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 <= bitcast_ln826_1_fu_435_p1;
            else 
                ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 <= UnifiedRetVal_reg_96;
            end if;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 <= UnifiedRetVal_reg_96;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_108_p42, ap_CS_fsm_state18, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_108_p42;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    b_fu_353_p1 <= zext_ln368_1_fu_349_p1;
    bitcast_ln521_1_fu_498_p1 <= p_Result_34_fu_491_p3;
    bitcast_ln521_2_fu_487_p1 <= p_Result_35_fu_480_p3;
    bitcast_ln521_3_fu_476_p1 <= p_Result_36_fu_469_p3;
    bitcast_ln521_4_fu_465_p1 <= p_Result_37_fu_458_p3;
    bitcast_ln521_5_fu_454_p1 <= p_Result_38_fu_447_p3;
    bitcast_ln521_fu_509_p1 <= p_Result_33_fu_502_p3;
    bitcast_ln822_1_fu_422_p1 <= xor_ln822_fu_416_p2;
    bitcast_ln822_fu_412_p1 <= c_reg_82;
    bitcast_ln826_1_fu_435_p1 <= xor_ln826_fu_429_p2;
    bitcast_ln826_fu_426_p1 <= d_reg_608;
    data_V_2_fu_214_p1 <= y_in;
    data_V_fu_188_p1 <= x_in;
    grp_atan2_generic_double_s_fu_163_ap_start <= grp_atan2_generic_double_s_fu_163_ap_start_reg;

    grp_atan2_generic_double_s_fu_163_x_in_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, a_reg_573, b_reg_580)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_atan2_generic_double_s_fu_163_x_in <= a_reg_573;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_atan2_generic_double_s_fu_163_x_in <= b_reg_580;
        else 
            grp_atan2_generic_double_s_fu_163_x_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_atan2_generic_double_s_fu_163_y_in_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, a_reg_573, b_reg_580)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_atan2_generic_double_s_fu_163_y_in <= b_reg_580;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_atan2_generic_double_s_fu_163_y_in <= a_reg_573;
        else 
            grp_atan2_generic_double_s_fu_163_y_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_171_ce <= ap_const_logic_1;

    grp_fu_171_p0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_171_p0 <= ap_const_lv64_400921FB54442D18;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_171_p0 <= ap_const_lv64_3FF921FB54442D18;
        else 
            grp_fu_171_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_171_p1_assign_proc : process(reg_182, c_reg_82, ap_CS_fsm_state7, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_171_p1 <= c_reg_82;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_171_p1 <= reg_182;
        else 
            grp_fu_171_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_171_p2 <= grp_fu_272_p_dout0;
    grp_fu_178_p0 <= zext_ln368_fu_336_p1;
    grp_fu_178_p1 <= zext_ln368_1_fu_349_p1;
    grp_fu_272_p_ce <= ap_const_logic_1;
    grp_fu_272_p_din0 <= grp_fu_171_p0;
    grp_fu_272_p_din1 <= grp_fu_171_p1;
    grp_fu_272_p_opcode <= ap_const_lv2_1;
    icmp_ln746_1_fu_386_p2 <= "0" when (tmp_fu_200_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln746_fu_380_p2 <= "0" when (tmp_52_fu_226_p4 = ap_const_lv11_7FF) else "1";
    icmp_ln824_2_fu_264_p2 <= "1" when (tmp_fu_200_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln824_3_fu_288_p2 <= "1" when (tmp_52_fu_226_p4 = ap_const_lv11_0) else "0";
    icmp_ln824_4_fu_300_p2 <= "1" when (tmp_fu_200_p4 = ap_const_lv11_0) else "0";
    icmp_ln824_5_fu_374_p2 <= "1" when (p_Result_41_fu_358_p3 = p_Result_42_fu_366_p3) else "0";
    icmp_ln824_fu_240_p2 <= "1" when (tmp_52_fu_226_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln828_1_fu_270_p2 <= "1" when (tmp_51_fu_210_p1 = ap_const_lv52_0) else "0";
    icmp_ln828_fu_246_p2 <= "1" when (tmp_53_fu_236_p1 = ap_const_lv52_0) else "0";
    or_ln746_1_fu_396_p2 <= (icmp_ln828_1_reg_536 or icmp_ln746_1_reg_595);
    or_ln746_fu_392_p2 <= (icmp_ln828_reg_527 or icmp_ln746_reg_590);
    p_Result_32_fu_218_p3 <= data_V_2_fu_214_p1(63 downto 63);
    p_Result_33_fu_502_p3 <= (p_Result_32_reg_516 & ap_const_lv63_400921FB54442D18);
    p_Result_34_fu_491_p3 <= (p_Result_32_reg_516 & ap_const_lv63_0);
    p_Result_35_fu_480_p3 <= (p_Result_32_reg_516 & ap_const_lv63_3FF921FB54442D18);
    p_Result_36_fu_469_p3 <= (p_Result_32_reg_516 & ap_const_lv63_400921FB54442D18);
    p_Result_37_fu_458_p3 <= (p_Result_32_reg_516 & ap_const_lv63_0);
    p_Result_38_fu_447_p3 <= (p_Result_32_reg_516 & ap_const_lv63_3FF921FB54442D18);
    p_Result_39_fu_332_p1 <= data_V_2_fu_214_p1(63 - 1 downto 0);
    p_Result_40_fu_345_p1 <= data_V_fu_188_p1(63 - 1 downto 0);
    p_Result_41_fu_358_p3 <= (ap_const_lv1_0 & p_Result_40_fu_345_p1);
    p_Result_42_fu_366_p3 <= (ap_const_lv1_0 & p_Result_39_fu_332_p1);
    p_Result_s_fu_192_p3 <= data_V_fu_188_p1(63 downto 63);
    select_ln809_fu_440_p3 <= 
        ap_const_lv64_BFF921FB54442D18 when (p_Result_32_reg_516(0) = '1') else 
        ap_const_lv64_3FF921FB54442D18;
    tmp_51_fu_210_p1 <= data_V_fu_188_p1(52 - 1 downto 0);
    tmp_52_fu_226_p4 <= data_V_2_fu_214_p1(62 downto 52);
    tmp_53_fu_236_p1 <= data_V_2_fu_214_p1(52 - 1 downto 0);
    tmp_fu_200_p4 <= data_V_fu_188_p1(62 downto 52);
    tmp_s_fu_312_p3 <= (p_Result_s_fu_192_p3 & p_Result_32_fu_218_p3);
    xor_ln822_fu_416_p2 <= (bitcast_ln822_fu_412_p1 xor ap_const_lv64_8000000000000000);
    xor_ln826_fu_429_p2 <= (bitcast_ln826_fu_426_p1 xor ap_const_lv64_8000000000000000);
    xor_ln828_1_fu_276_p2 <= (icmp_ln828_1_fu_270_p2 xor ap_const_lv1_1);
    xor_ln828_fu_252_p2 <= (icmp_ln828_fu_246_p2 xor ap_const_lv1_1);
    zext_ln368_1_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_40_fu_345_p1),64));
    zext_ln368_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_39_fu_332_p1),64));
end behav;
