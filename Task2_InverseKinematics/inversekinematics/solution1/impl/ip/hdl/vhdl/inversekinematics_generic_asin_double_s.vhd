-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity inversekinematics_generic_asin_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of inversekinematics_generic_asin_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv86_0 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv86_800000000000000000000 : STD_LOGIC_VECTOR (85 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_3E5 : STD_LOGIC_VECTOR (10 downto 0) := "01111100101";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_53 : STD_LOGIC_VECTOR (11 downto 0) := "000001010011";
    constant ap_const_lv12_FAD : STD_LOGIC_VECTOR (11 downto 0) := "111110101101";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_56 : STD_LOGIC_VECTOR (11 downto 0) := "000001010110";
    constant ap_const_lv86_3FFFFFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (85 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv42_3FFFFFFFFFF : STD_LOGIC_VECTOR (41 downto 0) := "111111111111111111111111111111111111111111";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv86_1 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv64_3FF921FB54442D18 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111111001001000011111101101010100010001000010110100011000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal cordic_apfixed_circ_table_arctan_128_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal cordic_apfixed_circ_table_arctan_128_V_ce0 : STD_LOGIC;
    signal cordic_apfixed_circ_table_arctan_128_V_q0 : STD_LOGIC_VECTOR (125 downto 0);
    signal n_reg_165 : STD_LOGIC_VECTOR (6 downto 0);
    signal t_V_5_reg_176 : STD_LOGIC_VECTOR (85 downto 0);
    signal empty_reg_185 : STD_LOGIC_VECTOR (85 downto 0);
    signal empty_61_reg_197 : STD_LOGIC_VECTOR (85 downto 0);
    signal empty_62_reg_208 : STD_LOGIC_VECTOR (85 downto 0);
    signal p_Result_17_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_17_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal inabs_2_fu_280_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal inabs_2_reg_1240 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln103_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_reg_1246 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_reg_1250 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1254 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_1258 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_312_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln824_reg_1266 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln557_2_fu_583_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal select_ln557_2_reg_1271 : STD_LOGIC_VECTOR (85 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal or_ln557_2_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln557_2_reg_1276 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln557_3_fu_597_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal n_1_fu_603_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal n_1_reg_1286 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln143_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_reg_1291 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_V_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_V_reg_1295 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_V_fu_772_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal y_V_fu_780_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal t_V_7_fu_818_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal tz_fu_860_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal icmp_ln839_fu_867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln839_reg_1325 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_V_fu_873_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal tmp_V_reg_1329 : STD_LOGIC_VECTOR (85 downto 0);
    signal p_Result_20_fu_879_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_20_reg_1334 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_V_2_fu_887_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal tmp_V_2_reg_1339 : STD_LOGIC_VECTOR (85 downto 0);
    signal sub_ln848_fu_960_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln848_reg_1345 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln858_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln858_reg_1351 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln858_fu_1078_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln858_reg_1356 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln847_fu_1086_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln847_reg_1361 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln113_fu_1228_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_phi_mux_n_phi_fu_169_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal bitcast_ln688_fu_1202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_out_phi_fu_224_p14 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_reg_219 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal trunc_ln176_cast42_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln96_fu_270_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal inabs_fu_276_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_256_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_38_fu_266_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal ireg_fu_326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_341_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln519_fu_355_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_19_fu_359_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln523_fu_367_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_18_fu_333_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_2_fu_371_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln509_fu_329_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln409_fu_351_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_391_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln535_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln535_fu_403_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln535_fu_409_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_fu_377_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_fu_415_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln540_fu_445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln540_fu_449_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal t_V_3_fu_459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln537_fu_429_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal zext_ln558_fu_475_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal icmp_ln525_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln536_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln525_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln536_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln536_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln535_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln539_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln539_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln535_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln557_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln535_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln557_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_4_fu_479_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal select_ln542_fu_467_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal and_ln539_1_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln539_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_fu_453_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln557_1_fu_565_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal and_ln536_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln557_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln557_fu_551_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal sext_ln557_fu_573_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal or_ln557_1_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bit_fu_624_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln160_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_01_i_cast_fu_620_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln176_fu_644_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_650_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1321_fu_658_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ush_fu_664_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sh_prom_i_i323_i_cast_cast_cast_fu_672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_fu_680_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_34_fu_686_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_36_fu_700_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_37_fu_706_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_43_fu_692_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal zext_ln1287_fu_720_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_44_fu_712_p3 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_45_fu_724_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_46_fu_730_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal sub_ln657_fu_736_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal sub_ln657_1_fu_742_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal add_ln657_3_fu_760_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal sub_ln657_2_fu_748_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal sub_ln657_3_fu_766_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal add_ln657_fu_754_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal shl_ln_fu_788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sh_prom_i_i_i_fu_802_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal r_V_47_fu_806_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal icmp_ln195_fu_796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_6_fu_812_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal tmp_19_fu_826_p4 : STD_LOGIC_VECTOR (82 downto 0);
    signal r_V_48_fu_836_p3 : STD_LOGIC_VECTOR (83 downto 0);
    signal zext_ln1252_fu_844_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal sub_ln657_4_fu_848_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal add_ln657_5_fu_854_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal t_fu_894_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_904_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1026_fu_922_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Result_21_fu_926_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_934_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1028_fu_942_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal NZeros_fu_912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal hitNonZero_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal NZeros_1_fu_946_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal NZeros_3_fu_952_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_972_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln851_fu_988_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln851_fu_992_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln851_fu_998_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal zext_ln853_fu_1008_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal lshr_ln851_fu_1002_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal shl_ln853_fu_1012_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal or_ln853_1_fu_1018_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal and_ln853_fu_1024_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal tmp_35_fu_1036_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_fu_1050_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln853_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln850_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln853_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln850_fu_1070_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln853_1_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln859_fu_1090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln859_fu_1095_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal add_ln858_fu_1104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln858_fu_1109_p1 : STD_LOGIC_VECTOR (85 downto 0);
    signal lshr_ln858_fu_1113_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal shl_ln859_fu_1099_p2 : STD_LOGIC_VECTOR (85 downto 0);
    signal trunc_ln859_fu_1118_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln859_1_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_1126_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln865_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_1_fu_1136_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_4_fu_1142_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_1156_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln869_fu_1172_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln847_fu_1164_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln869_fu_1177_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln866_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_1183_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_23_fu_1190_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln137_fu_1207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln137_fu_1211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln137_1_fu_1217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_1_fu_1221_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component inversekinematics_generic_asin_double_s_cordic_apfixed_circ_table_arctan_128_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (125 downto 0) );
    end component;



begin
    cordic_apfixed_circ_table_arctan_128_V_U : component inversekinematics_generic_asin_double_s_cordic_apfixed_circ_table_arctan_128_V
    generic map (
        DataWidth => 126,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cordic_apfixed_circ_table_arctan_128_V_address0,
        ce0 => cordic_apfixed_circ_table_arctan_128_V_ce0,
        q0 => cordic_apfixed_circ_table_arctan_128_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv64_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_return_preg <= out_1_fu_1221_p3;
                end if; 
            end if;
        end if;
    end process;


    empty_61_reg_197_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                empty_61_reg_197 <= ap_const_lv86_800000000000000000000;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln143_fu_609_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                empty_61_reg_197 <= x_V_fu_772_p3;
            end if; 
        end if;
    end process;

    empty_62_reg_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                empty_62_reg_208 <= ap_const_lv86_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln143_fu_609_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                empty_62_reg_208 <= y_V_fu_780_p3;
            end if; 
        end if;
    end process;

    empty_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                empty_reg_185 <= ap_const_lv86_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln143_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                empty_reg_185 <= tz_fu_860_p3;
            end if; 
        end if;
    end process;

    n_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                n_reg_165 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln143_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                n_reg_165 <= n_1_reg_1286;
            end if; 
        end if;
    end process;

    out_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_300_p2 = ap_const_lv1_1) and (icmp_ln106_fu_294_p2 = ap_const_lv1_0) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                out_reg_219 <= inabs_2_fu_280_p3;
            elsif ((((icmp_ln106_fu_294_p2 = ap_const_lv1_1) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln839_fu_867_p2 = ap_const_lv1_1)))) then 
                out_reg_219 <= ap_const_lv64_0;
            elsif ((((tmp_28_fu_312_p3 = ap_const_lv1_1) and (icmp_ln112_fu_306_p2 = ap_const_lv1_0) and (icmp_ln109_fu_300_p2 = ap_const_lv1_0) and (icmp_ln106_fu_294_p2 = ap_const_lv1_0) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((icmp_ln103_fu_288_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                out_reg_219 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                out_reg_219 <= select_ln113_fu_1228_p3;
            elsif (((tmp_28_reg_1262 = ap_const_lv1_0) and (icmp_ln112_reg_1258 = ap_const_lv1_0) and (icmp_ln109_reg_1254 = ap_const_lv1_0) and (icmp_ln106_reg_1250 = ap_const_lv1_0) and (icmp_ln103_reg_1246 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln839_reg_1325 = ap_const_lv1_0))) then 
                out_reg_219 <= bitcast_ln688_fu_1202_p1;
            end if; 
        end if;
    end process;

    t_V_5_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_5_reg_176 <= select_ln557_3_fu_597_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln143_fu_609_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                t_V_5_reg_176 <= t_V_7_fu_818_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln143_fu_609_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                d_V_reg_1295 <= d_V_fu_638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln103_reg_1246 <= icmp_ln103_fu_288_p2;
                inabs_2_reg_1240 <= inabs_2_fu_280_p3;
                p_Result_17_reg_1235 <= data_V_fu_244_p1(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln106_reg_1250 <= icmp_ln106_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln106_fu_294_p2 = ap_const_lv1_0) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln109_reg_1254 <= icmp_ln109_fu_300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_300_p2 = ap_const_lv1_0) and (icmp_ln106_fu_294_p2 = ap_const_lv1_0) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln112_reg_1258 <= icmp_ln112_fu_306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln143_reg_1291 <= icmp_ln143_fu_609_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_fu_306_p2 = ap_const_lv1_1) and (icmp_ln109_fu_300_p2 = ap_const_lv1_0) and (icmp_ln106_fu_294_p2 = ap_const_lv1_0) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln824_reg_1266 <= icmp_ln824_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln839_reg_1325 <= icmp_ln839_fu_867_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                icmp_ln858_reg_1351 <= icmp_ln858_fu_1058_p2;
                p_Result_20_reg_1334 <= empty_reg_185(85 downto 85);
                select_ln858_reg_1356 <= select_ln858_fu_1078_p3;
                sub_ln848_reg_1345 <= sub_ln848_fu_960_p2;
                tmp_V_2_reg_1339 <= tmp_V_2_fu_887_p3;
                trunc_ln847_reg_1361 <= trunc_ln847_fu_1086_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                n_1_reg_1286 <= n_1_fu_603_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                or_ln557_2_reg_1276 <= or_ln557_2_fu_591_p2;
                select_ln557_2_reg_1271 <= select_ln557_2_fu_583_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln112_fu_306_p2 = ap_const_lv1_0) and (icmp_ln109_fu_300_p2 = ap_const_lv1_0) and (icmp_ln106_fu_294_p2 = ap_const_lv1_0) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_28_reg_1262 <= data_V_fu_244_p1(62 downto 62);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln839_fu_867_p2 = ap_const_lv1_0))) then
                tmp_V_reg_1329 <= tmp_V_fu_873_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln103_fu_288_p2, icmp_ln106_fu_294_p2, icmp_ln109_fu_300_p2, icmp_ln112_fu_306_p2, tmp_28_fu_312_p3, ap_enable_reg_pp0_iter0, icmp_ln143_fu_609_p2, icmp_ln839_fu_867_p2, ap_CS_fsm_state6, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_28_fu_312_p3 = ap_const_lv1_0) and (icmp_ln112_fu_306_p2 = ap_const_lv1_0) and (icmp_ln109_fu_300_p2 = ap_const_lv1_0) and (icmp_ln106_fu_294_p2 = ap_const_lv1_0) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((icmp_ln112_fu_306_p2 = ap_const_lv1_1) and (icmp_ln109_fu_300_p2 = ap_const_lv1_0) and (icmp_ln106_fu_294_p2 = ap_const_lv1_0) and (icmp_ln103_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((icmp_ln103_fu_288_p2 = ap_const_lv1_1) or ((icmp_ln106_fu_294_p2 = ap_const_lv1_1) or ((icmp_ln109_fu_300_p2 = ap_const_lv1_1) or ((tmp_28_fu_312_p3 = ap_const_lv1_1) and (icmp_ln112_fu_306_p2 = ap_const_lv1_0))))))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln143_fu_609_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln143_fu_609_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln839_fu_867_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_391_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln409_fu_351_p1));
    NZeros_1_fu_946_p2 <= std_logic_vector(unsigned(trunc_ln1028_fu_942_p1) + unsigned(NZeros_fu_912_p1));
    NZeros_3_fu_952_p3 <= 
        NZeros_1_fu_946_p2 when (hitNonZero_fu_916_p2(0) = '1') else 
        NZeros_fu_912_p1;
    NZeros_fu_912_p1 <= tmp_fu_904_p3(32 - 1 downto 0);
    add_ln176_fu_644_p2 <= std_logic_vector(unsigned(n_01_i_cast_fu_620_p1) + unsigned(ap_const_lv8_FF));
    add_ln535_fu_403_p2 <= std_logic_vector(unsigned(F2_fu_391_p2) + unsigned(ap_const_lv12_FAD));
    add_ln657_3_fu_760_p2 <= std_logic_vector(unsigned(sub_ln657_fu_736_p2) + unsigned(r_V_44_fu_712_p3));
    add_ln657_5_fu_854_p2 <= std_logic_vector(unsigned(zext_ln1252_fu_844_p1) + unsigned(empty_reg_185));
    add_ln657_fu_754_p2 <= std_logic_vector(unsigned(sub_ln657_1_fu_742_p2) + unsigned(r_V_43_fu_692_p3));
    add_ln858_fu_1104_p2 <= std_logic_vector(unsigned(sub_ln848_reg_1345) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln869_fu_1177_p2 <= std_logic_vector(unsigned(sub_ln869_fu_1172_p2) + unsigned(select_ln847_fu_1164_p3));
    and_ln535_fu_509_p2 <= (xor_ln536_fu_503_p2 and icmp_ln535_fu_397_p2);
    and_ln536_fu_491_p2 <= (xor_ln525_fu_485_p2 and icmp_ln536_fu_423_p2);
    and_ln539_1_fu_527_p2 <= (xor_ln539_fu_521_p2 and and_ln535_fu_509_p2);
    and_ln539_fu_515_p2 <= (icmp_ln539_fu_433_p2 and and_ln535_fu_509_p2);
    and_ln557_fu_545_p2 <= (xor_ln535_fu_539_p2 and icmp_ln557_fu_439_p2);
    and_ln853_1_fu_1064_p2 <= (xor_ln853_fu_1044_p2 and p_Result_22_fu_1050_p3);
    and_ln853_fu_1024_p2 <= (tmp_V_2_fu_887_p3 and or_ln853_1_fu_1018_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln143_fu_609_p2)
    begin
        if ((icmp_ln143_fu_609_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_n_phi_fu_169_p4_assign_proc : process(n_reg_165, n_1_reg_1286, ap_CS_fsm_pp0_stage0, icmp_ln143_reg_1291, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln143_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_n_phi_fu_169_p4 <= n_1_reg_1286;
        else 
            ap_phi_mux_n_phi_fu_169_p4 <= n_reg_165;
        end if; 
    end process;


    ap_phi_mux_out_phi_fu_224_p14_assign_proc : process(icmp_ln103_reg_1246, icmp_ln106_reg_1250, icmp_ln109_reg_1254, icmp_ln112_reg_1258, tmp_28_reg_1262, icmp_ln839_reg_1325, bitcast_ln688_fu_1202_p1, out_reg_219, ap_CS_fsm_state8)
    begin
        if (((tmp_28_reg_1262 = ap_const_lv1_0) and (icmp_ln112_reg_1258 = ap_const_lv1_0) and (icmp_ln109_reg_1254 = ap_const_lv1_0) and (icmp_ln106_reg_1250 = ap_const_lv1_0) and (icmp_ln103_reg_1246 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln839_reg_1325 = ap_const_lv1_0))) then 
            ap_phi_mux_out_phi_fu_224_p14 <= bitcast_ln688_fu_1202_p1;
        else 
            ap_phi_mux_out_phi_fu_224_p14 <= out_reg_219;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state8, out_1_fu_1221_p3, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_return <= out_1_fu_1221_p3;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    bit_fu_624_p3 <= empty_61_reg_197(85 downto 85);
    bitcast_ln137_1_fu_1217_p1 <= xor_ln137_fu_1211_p2;
    bitcast_ln137_fu_1207_p1 <= ap_phi_mux_out_phi_fu_224_p14;
    bitcast_ln688_fu_1202_p1 <= p_Result_23_fu_1190_p5;
    cordic_apfixed_circ_table_arctan_128_V_address0 <= trunc_ln176_cast42_fu_615_p1(7 - 1 downto 0);

    cordic_apfixed_circ_table_arctan_128_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            cordic_apfixed_circ_table_arctan_128_V_ce0 <= ap_const_logic_1;
        else 
            cordic_apfixed_circ_table_arctan_128_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_V_fu_638_p2 <= (icmp_ln160_fu_632_p2 xor bit_fu_624_p3);
    data_V_fu_244_p1 <= in_r;
    exp_tmp_fu_341_p4 <= ireg_fu_326_p1(62 downto 52);
    hitNonZero_fu_916_p2 <= "1" when (t_fu_894_p4 = ap_const_lv64_0) else "0";
    icmp_ln103_fu_288_p2 <= "1" when (tmp_37_fu_256_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln106_fu_294_p2 <= "1" when (tmp_37_fu_256_p4 = ap_const_lv11_0) else "0";
    icmp_ln109_fu_300_p2 <= "1" when (unsigned(tmp_37_fu_256_p4) < unsigned(ap_const_lv11_3E5)) else "0";
    icmp_ln112_fu_306_p2 <= "1" when (tmp_37_fu_256_p4 = ap_const_lv11_3FF) else "0";
    icmp_ln143_fu_609_p2 <= "1" when (ap_phi_mux_n_phi_fu_169_p4 = ap_const_lv7_54) else "0";
    icmp_ln160_fu_632_p2 <= "1" when (signed(empty_62_reg_208) > signed(t_V_5_reg_176)) else "0";
    icmp_ln195_fu_796_p2 <= "1" when (unsigned(ap_phi_mux_n_phi_fu_169_p4) < unsigned(ap_const_lv7_2B)) else "0";
    icmp_ln525_fu_385_p2 <= "1" when (trunc_ln509_fu_329_p1 = ap_const_lv63_0) else "0";
    icmp_ln535_fu_397_p2 <= "1" when (signed(F2_fu_391_p2) > signed(ap_const_lv12_53)) else "0";
    icmp_ln536_fu_423_p2 <= "1" when (F2_fu_391_p2 = ap_const_lv12_53) else "0";
    icmp_ln539_fu_433_p2 <= "1" when (unsigned(sh_amt_fu_415_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln557_fu_439_p2 <= "1" when (unsigned(sh_amt_fu_415_p3) < unsigned(ap_const_lv12_56)) else "0";
    icmp_ln824_fu_320_p2 <= "1" when (tmp_38_fu_266_p1 = ap_const_lv52_0) else "0";
    icmp_ln839_fu_867_p2 <= "1" when (empty_reg_185 = ap_const_lv86_0) else "0";
    icmp_ln850_fu_982_p2 <= "1" when (signed(tmp_34_fu_972_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln853_fu_1030_p2 <= "0" when (and_ln853_fu_1024_p2 = ap_const_lv86_0) else "1";
    icmp_ln858_fu_1058_p2 <= "1" when (signed(lsb_index_fu_966_p2) > signed(ap_const_lv32_0)) else "0";
    inabs_2_fu_280_p3 <= 
        inabs_fu_276_p1 when (p_Result_17_fu_248_p3(0) = '1') else 
        in_r;
    inabs_fu_276_p1 <= xor_ln96_fu_270_p2;
    ireg_fu_326_p1 <= inabs_2_reg_1240;
    isNeg_fu_650_p3 <= add_ln176_fu_644_p2(7 downto 7);
    lsb_index_fu_966_p2 <= std_logic_vector(unsigned(sub_ln848_fu_960_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    lshr_ln851_fu_1002_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv86_3FFFFFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln851_fu_998_p1(31-1 downto 0)))));
    lshr_ln858_fu_1113_p2 <= std_logic_vector(shift_right(unsigned(tmp_V_2_reg_1339),to_integer(unsigned('0' & zext_ln858_fu_1109_p1(31-1 downto 0)))));
    m_1_fu_1136_p2 <= std_logic_vector(unsigned(m_fu_1126_p3) + unsigned(zext_ln865_fu_1133_p1));
    m_4_fu_1142_p4 <= m_1_fu_1136_p2(63 downto 1);
    m_fu_1126_p3 <= 
        trunc_ln859_fu_1118_p1 when (icmp_ln858_reg_1351(0) = '1') else 
        trunc_ln859_1_fu_1122_p1;
    man_V_2_fu_371_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln523_fu_367_p1));
    man_V_fu_377_p3 <= 
        man_V_2_fu_371_p2 when (p_Result_18_fu_333_p3(0) = '1') else 
        zext_ln523_fu_367_p1;
    n_01_i_cast_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n_phi_fu_169_p4),8));
    n_1_fu_603_p2 <= std_logic_vector(unsigned(ap_phi_mux_n_phi_fu_169_p4) + unsigned(ap_const_lv7_1));
    or_ln535_fu_533_p2 <= (or_ln536_fu_497_p2 or icmp_ln535_fu_397_p2);
    or_ln536_fu_497_p2 <= (icmp_ln536_fu_423_p2 or icmp_ln525_fu_385_p2);
    or_ln557_1_fu_577_p2 <= (and_ln539_fu_515_p2 or and_ln536_fu_491_p2);
    or_ln557_2_fu_591_p2 <= (or_ln557_fu_559_p2 or or_ln557_1_fu_577_p2);
    or_ln557_fu_559_p2 <= (and_ln557_fu_545_p2 or and_ln539_1_fu_527_p2);
    or_ln853_1_fu_1018_p2 <= (shl_ln853_fu_1012_p2 or lshr_ln851_fu_1002_p2);
    out_1_fu_1221_p3 <= 
        bitcast_ln137_1_fu_1217_p1 when (p_Result_17_reg_1235(0) = '1') else 
        ap_phi_mux_out_phi_fu_224_p14;
    p_Result_17_fu_248_p3 <= data_V_fu_244_p1(63 downto 63);
    p_Result_18_fu_333_p3 <= ireg_fu_326_p1(63 downto 63);
    p_Result_19_fu_359_p3 <= (ap_const_lv1_1 & trunc_ln519_fu_355_p1);
    p_Result_20_fu_879_p3 <= empty_reg_185(85 downto 85);
    p_Result_21_fu_926_p3 <= (trunc_ln1026_fu_922_p1 & ap_const_lv42_3FFFFFFFFFF);
    p_Result_22_fu_1050_p3 <= tmp_V_2_fu_887_p3(to_integer(unsigned(lsb_index_fu_966_p2)) downto to_integer(unsigned(lsb_index_fu_966_p2))) when (to_integer(unsigned(lsb_index_fu_966_p2))>= 0 and to_integer(unsigned(lsb_index_fu_966_p2))<=85) else "-";
    p_Result_23_fu_1190_p5 <= (tmp_6_fu_1183_p3 & zext_ln866_fu_1152_p1(51 downto 0));
    p_Result_s_fu_1156_p3 <= m_1_fu_1136_p2(54 downto 54);
    r_V_34_fu_686_p2 <= std_logic_vector(shift_right(signed(empty_61_reg_197),to_integer(unsigned('0' & sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1(31-1 downto 0)))));
    r_V_36_fu_700_p2 <= std_logic_vector(shift_left(unsigned(empty_62_reg_208),to_integer(unsigned('0' & sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1(31-1 downto 0)))));
    r_V_37_fu_706_p2 <= std_logic_vector(shift_right(signed(empty_62_reg_208),to_integer(unsigned('0' & sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1(31-1 downto 0)))));
    r_V_43_fu_692_p3 <= 
        r_V_fu_680_p2 when (isNeg_fu_650_p3(0) = '1') else 
        r_V_34_fu_686_p2;
    r_V_44_fu_712_p3 <= 
        r_V_36_fu_700_p2 when (isNeg_fu_650_p3(0) = '1') else 
        r_V_37_fu_706_p2;
    r_V_45_fu_724_p2 <= std_logic_vector(shift_right(signed(r_V_43_fu_692_p3),to_integer(unsigned('0' & zext_ln1287_fu_720_p1(31-1 downto 0)))));
    r_V_46_fu_730_p2 <= std_logic_vector(shift_right(signed(r_V_44_fu_712_p3),to_integer(unsigned('0' & zext_ln1287_fu_720_p1(31-1 downto 0)))));
    r_V_47_fu_806_p2 <= std_logic_vector(shift_right(signed(t_V_5_reg_176),to_integer(unsigned('0' & sh_prom_i_i_i_fu_802_p1(31-1 downto 0)))));
    r_V_48_fu_836_p3 <= (tmp_19_fu_826_p4 & ap_const_lv1_0);
    r_V_fu_680_p2 <= std_logic_vector(shift_left(unsigned(empty_61_reg_197),to_integer(unsigned('0' & sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1(31-1 downto 0)))));
    select_ln113_fu_1228_p3 <= 
        ap_const_lv64_3FF921FB54442D18 when (icmp_ln824_reg_1266(0) = '1') else 
        ap_const_lv64_7FFFFFFFFFFFFFFF;
    select_ln542_fu_467_p3 <= 
        ap_const_lv86_3FFFFFFFFFFFFFFFFFFFFF when (t_V_3_fu_459_p3(0) = '1') else 
        ap_const_lv86_0;
    select_ln557_1_fu_565_p3 <= 
        t_V_2_fu_453_p2 when (and_ln539_fu_515_p2(0) = '1') else 
        man_V_fu_377_p3;
    select_ln557_2_fu_583_p3 <= 
        select_ln557_fu_551_p3 when (or_ln557_fu_559_p2(0) = '1') else 
        sext_ln557_fu_573_p1;
    select_ln557_3_fu_597_p3 <= 
        select_ln557_2_reg_1271 when (or_ln557_2_reg_1276(0) = '1') else 
        ap_const_lv86_0;
    select_ln557_fu_551_p3 <= 
        t_V_4_fu_479_p2 when (and_ln557_fu_545_p2(0) = '1') else 
        select_ln542_fu_467_p3;
    select_ln847_fu_1164_p3 <= 
        ap_const_lv11_3FF when (p_Result_s_fu_1156_p3(0) = '1') else 
        ap_const_lv11_3FE;
    select_ln850_fu_1070_p3 <= 
        icmp_ln853_fu_1030_p2 when (icmp_ln850_fu_982_p2(0) = '1') else 
        p_Result_22_fu_1050_p3;
    select_ln858_fu_1078_p3 <= 
        select_ln850_fu_1070_p3 when (icmp_ln858_fu_1058_p2(0) = '1') else 
        and_ln853_1_fu_1064_p2;
        sext_ln537_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(man_V_fu_377_p3),86));

        sext_ln540_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_415_p3),32));

        sext_ln557_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln557_1_fu_565_p3),86));

    sh_amt_fu_415_p3 <= 
        add_ln535_fu_403_p2 when (icmp_ln535_fu_397_p2(0) = '1') else 
        sub_ln535_fu_409_p2;
    sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i323_i_cast_cast_cast_fu_672_p1),86));
        sh_prom_i_i323_i_cast_cast_cast_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_664_p3),32));

    sh_prom_i_i_i_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_788_p3),86));
    shl_ln853_fu_1012_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv86_1),to_integer(unsigned('0' & zext_ln853_fu_1008_p1(31-1 downto 0)))));
    shl_ln859_fu_1099_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_2_reg_1339),to_integer(unsigned('0' & zext_ln859_fu_1095_p1(31-1 downto 0)))));
    shl_ln_fu_788_p3 <= (ap_phi_mux_n_phi_fu_169_p4 & ap_const_lv1_0);
    sub_ln1321_fu_658_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) - unsigned(n_01_i_cast_fu_620_p1));
    sub_ln535_fu_409_p2 <= std_logic_vector(unsigned(ap_const_lv12_53) - unsigned(F2_fu_391_p2));
    sub_ln657_1_fu_742_p2 <= std_logic_vector(unsigned(empty_62_reg_208) - unsigned(r_V_46_fu_730_p2));
    sub_ln657_2_fu_748_p2 <= std_logic_vector(unsigned(sub_ln657_fu_736_p2) - unsigned(r_V_44_fu_712_p3));
    sub_ln657_3_fu_766_p2 <= std_logic_vector(unsigned(sub_ln657_1_fu_742_p2) - unsigned(r_V_43_fu_692_p3));
    sub_ln657_4_fu_848_p2 <= std_logic_vector(unsigned(empty_reg_185) - unsigned(zext_ln1252_fu_844_p1));
    sub_ln657_fu_736_p2 <= std_logic_vector(unsigned(empty_61_reg_197) - unsigned(r_V_45_fu_724_p2));
    sub_ln848_fu_960_p2 <= std_logic_vector(unsigned(ap_const_lv32_56) - unsigned(NZeros_3_fu_952_p3));
    sub_ln851_fu_992_p2 <= std_logic_vector(unsigned(ap_const_lv7_C) - unsigned(trunc_ln851_fu_988_p1));
    sub_ln859_fu_1090_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln848_reg_1345));
    sub_ln869_fu_1172_p2 <= std_logic_vector(unsigned(ap_const_lv11_3) - unsigned(trunc_ln847_reg_1361));
    t_V_2_fu_453_p2 <= std_logic_vector(shift_right(signed(man_V_fu_377_p3),to_integer(unsigned('0' & zext_ln540_fu_449_p1(31-1 downto 0)))));
    t_V_3_fu_459_p3 <= ireg_fu_326_p1(63 downto 63);
    t_V_4_fu_479_p2 <= std_logic_vector(shift_left(unsigned(sext_ln537_fu_429_p1),to_integer(unsigned('0' & zext_ln558_fu_475_p1(31-1 downto 0)))));
    t_V_6_fu_812_p2 <= std_logic_vector(unsigned(r_V_47_fu_806_p2) + unsigned(t_V_5_reg_176));
    t_V_7_fu_818_p3 <= 
        t_V_6_fu_812_p2 when (icmp_ln195_fu_796_p2(0) = '1') else 
        t_V_5_reg_176;
    t_fu_894_p4 <= tmp_V_2_fu_887_p3(85 downto 22);
    tmp_19_fu_826_p4 <= cordic_apfixed_circ_table_arctan_128_V_q0(125 downto 43);
    tmp_28_fu_312_p3 <= data_V_fu_244_p1(62 downto 62);
    tmp_34_fu_972_p4 <= lsb_index_fu_966_p2(31 downto 1);
    tmp_35_fu_1036_p3 <= lsb_index_fu_966_p2(31 downto 31);
    tmp_37_fu_256_p4 <= data_V_fu_244_p1(62 downto 52);
    tmp_38_fu_266_p1 <= data_V_fu_244_p1(52 - 1 downto 0);
    tmp_6_fu_1183_p3 <= (p_Result_20_reg_1334 & add_ln869_fu_1177_p2);
    tmp_V_2_fu_887_p3 <= 
        tmp_V_reg_1329 when (p_Result_20_fu_879_p3(0) = '1') else 
        empty_reg_185;
    tmp_V_fu_873_p2 <= std_logic_vector(unsigned(ap_const_lv86_0) - unsigned(empty_reg_185));
    
    tmp_fu_904_p3_proc : process(t_fu_894_p4)
    begin
        tmp_fu_904_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if t_fu_894_p4(i) = '1' then
                tmp_fu_904_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_s_fu_934_p3_proc : process(p_Result_21_fu_926_p3)
    begin
        tmp_s_fu_934_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_21_fu_926_p3(i) = '1' then
                tmp_s_fu_934_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    trunc_ln1026_fu_922_p1 <= tmp_V_2_fu_887_p3(22 - 1 downto 0);
    trunc_ln1028_fu_942_p1 <= tmp_s_fu_934_p3(32 - 1 downto 0);
    trunc_ln176_cast42_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n_phi_fu_169_p4),64));
    trunc_ln509_fu_329_p1 <= ireg_fu_326_p1(63 - 1 downto 0);
    trunc_ln519_fu_355_p1 <= ireg_fu_326_p1(52 - 1 downto 0);
    trunc_ln847_fu_1086_p1 <= NZeros_3_fu_952_p3(11 - 1 downto 0);
    trunc_ln851_fu_988_p1 <= sub_ln848_fu_960_p2(7 - 1 downto 0);
    trunc_ln859_1_fu_1122_p1 <= shl_ln859_fu_1099_p2(64 - 1 downto 0);
    trunc_ln859_fu_1118_p1 <= lshr_ln858_fu_1113_p2(64 - 1 downto 0);
    tz_fu_860_p3 <= 
        sub_ln657_4_fu_848_p2 when (d_V_reg_1295(0) = '1') else 
        add_ln657_5_fu_854_p2;
    ush_fu_664_p3 <= 
        sub_ln1321_fu_658_p2 when (isNeg_fu_650_p3(0) = '1') else 
        add_ln176_fu_644_p2;
    x_V_fu_772_p3 <= 
        add_ln657_3_fu_760_p2 when (d_V_fu_638_p2(0) = '1') else 
        sub_ln657_2_fu_748_p2;
    xor_ln137_fu_1211_p2 <= (bitcast_ln137_fu_1207_p1 xor ap_const_lv64_8000000000000000);
    xor_ln525_fu_485_p2 <= (icmp_ln525_fu_385_p2 xor ap_const_lv1_1);
    xor_ln535_fu_539_p2 <= (or_ln535_fu_533_p2 xor ap_const_lv1_1);
    xor_ln536_fu_503_p2 <= (or_ln536_fu_497_p2 xor ap_const_lv1_1);
    xor_ln539_fu_521_p2 <= (icmp_ln539_fu_433_p2 xor ap_const_lv1_1);
    xor_ln853_fu_1044_p2 <= (tmp_35_fu_1036_p3 xor ap_const_lv1_1);
    xor_ln96_fu_270_p2 <= (data_V_fu_244_p1 xor ap_const_lv64_8000000000000000);
    y_V_fu_780_p3 <= 
        sub_ln657_3_fu_766_p2 when (d_V_fu_638_p2(0) = '1') else 
        add_ln657_fu_754_p2;
    zext_ln1252_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_48_fu_836_p3),86));
    zext_ln1287_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_1_fu_603_p2),86));
    zext_ln409_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_341_p4),12));
    zext_ln523_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_19_fu_359_p3),54));
    zext_ln540_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln540_fu_445_p1),54));
    zext_ln558_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln540_fu_445_p1),86));
    zext_ln851_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln851_fu_992_p2),86));
    zext_ln853_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lsb_index_fu_966_p2),86));
    zext_ln858_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln858_fu_1104_p2),86));
    zext_ln859_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln859_fu_1090_p2),86));
    zext_ln865_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln858_reg_1356),64));
    zext_ln866_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_4_fu_1142_p4),64));
end behav;
