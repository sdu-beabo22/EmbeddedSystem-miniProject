// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inversekinematics_atan2_cordic_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        y_in,
        x_in,
        ap_return,
        grp_fu_272_p_din0,
        grp_fu_272_p_din1,
        grp_fu_272_p_opcode,
        grp_fu_272_p_dout0,
        grp_fu_272_p_ce
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] y_in;
input  [63:0] x_in;
output  [63:0] ap_return;
output  [63:0] grp_fu_272_p_din0;
output  [63:0] grp_fu_272_p_din1;
output  [1:0] grp_fu_272_p_opcode;
input  [63:0] grp_fu_272_p_dout0;
output   grp_fu_272_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_atan2_generic_double_s_fu_163_ap_return;
reg   [63:0] reg_182;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
wire   [0:0] p_Result_32_fu_218_p3;
reg   [0:0] p_Result_32_reg_516;
wire   [0:0] icmp_ln828_fu_246_p2;
reg   [0:0] icmp_ln828_reg_527;
wire   [0:0] and_ln18_fu_258_p2;
reg   [0:0] and_ln18_reg_532;
wire   [0:0] icmp_ln828_1_fu_270_p2;
reg   [0:0] icmp_ln828_1_reg_536;
wire   [0:0] and_ln18_1_fu_282_p2;
reg   [0:0] and_ln18_1_reg_541;
wire   [0:0] icmp_ln824_3_fu_288_p2;
reg   [0:0] icmp_ln824_3_reg_545;
wire   [0:0] and_ln762_fu_294_p2;
reg   [0:0] and_ln762_reg_549;
wire   [0:0] icmp_ln824_4_fu_300_p2;
reg   [0:0] icmp_ln824_4_reg_553;
wire   [0:0] and_ln766_fu_306_p2;
reg   [0:0] and_ln766_reg_557;
wire   [1:0] tmp_s_fu_312_p3;
reg   [1:0] tmp_s_reg_561;
wire   [0:0] and_ln18_2_fu_320_p2;
reg   [0:0] and_ln18_2_reg_565;
wire   [0:0] and_ln18_3_fu_326_p2;
reg   [0:0] and_ln18_3_reg_569;
wire   [63:0] a_fu_340_p1;
reg   [63:0] a_reg_573;
wire   [63:0] b_fu_353_p1;
reg   [63:0] b_reg_580;
wire   [0:0] icmp_ln746_fu_380_p2;
reg   [0:0] icmp_ln746_reg_590;
wire   [0:0] icmp_ln824_5_fu_374_p2;
wire   [0:0] icmp_ln746_1_fu_386_p2;
reg   [0:0] icmp_ln746_1_reg_595;
wire   [63:0] grp_fu_171_p2;
reg   [63:0] sub_i_reg_603;
wire    ap_CS_fsm_state11;
reg   [63:0] d_reg_608;
wire    ap_CS_fsm_state17;
wire   [63:0] bitcast_ln822_1_fu_422_p1;
wire   [63:0] select_ln809_fu_440_p3;
wire    ap_CS_fsm_state19;
wire   [63:0] bitcast_ln521_5_fu_454_p1;
wire    ap_CS_fsm_state20;
wire   [63:0] bitcast_ln521_4_fu_465_p1;
wire    ap_CS_fsm_state21;
wire   [63:0] bitcast_ln521_3_fu_476_p1;
wire    ap_CS_fsm_state22;
wire   [63:0] bitcast_ln521_2_fu_487_p1;
wire    ap_CS_fsm_state23;
wire   [63:0] bitcast_ln521_1_fu_498_p1;
wire    ap_CS_fsm_state24;
wire   [63:0] bitcast_ln521_fu_509_p1;
wire    ap_CS_fsm_state25;
wire    grp_atan2_generic_double_s_fu_163_ap_start;
wire    grp_atan2_generic_double_s_fu_163_ap_done;
wire    grp_atan2_generic_double_s_fu_163_ap_idle;
wire    grp_atan2_generic_double_s_fu_163_ap_ready;
reg   [63:0] grp_atan2_generic_double_s_fu_163_y_in;
reg   [63:0] grp_atan2_generic_double_s_fu_163_x_in;
reg   [63:0] c_reg_82;
wire    ap_CS_fsm_state12;
reg   [63:0] ap_phi_mux_UnifiedRetVal_phi_fu_108_p42;
reg   [63:0] UnifiedRetVal_reg_96;
wire   [63:0] bitcast_ln826_1_fu_435_p1;
wire    ap_CS_fsm_state18;
reg    grp_atan2_generic_double_s_fu_163_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
reg   [63:0] grp_fu_171_p0;
reg   [63:0] grp_fu_171_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state13;
wire   [63:0] grp_fu_178_p0;
wire   [63:0] grp_fu_178_p1;
wire   [63:0] data_V_fu_188_p1;
wire   [63:0] data_V_2_fu_214_p1;
wire   [10:0] tmp_52_fu_226_p4;
wire   [51:0] tmp_53_fu_236_p1;
wire   [0:0] icmp_ln824_fu_240_p2;
wire   [0:0] xor_ln828_fu_252_p2;
wire   [10:0] tmp_fu_200_p4;
wire   [51:0] tmp_51_fu_210_p1;
wire   [0:0] icmp_ln824_2_fu_264_p2;
wire   [0:0] xor_ln828_1_fu_276_p2;
wire   [0:0] p_Result_s_fu_192_p3;
wire   [62:0] p_Result_39_fu_332_p1;
wire   [63:0] zext_ln368_fu_336_p1;
wire   [62:0] p_Result_40_fu_345_p1;
wire   [63:0] zext_ln368_1_fu_349_p1;
wire   [63:0] p_Result_41_fu_358_p3;
wire   [63:0] p_Result_42_fu_366_p3;
wire    ap_CS_fsm_state2;
wire   [0:0] or_ln746_fu_392_p2;
wire   [0:0] or_ln746_1_fu_396_p2;
wire   [0:0] and_ln746_fu_400_p2;
wire   [0:0] grp_fu_178_p2;
wire   [63:0] bitcast_ln822_fu_412_p1;
wire   [63:0] xor_ln822_fu_416_p2;
wire   [63:0] bitcast_ln826_fu_426_p1;
wire   [63:0] xor_ln826_fu_429_p2;
wire   [63:0] p_Result_38_fu_447_p3;
wire   [63:0] p_Result_37_fu_458_p3;
wire   [63:0] p_Result_36_fu_469_p3;
wire   [63:0] p_Result_35_fu_480_p3;
wire   [63:0] p_Result_34_fu_491_p3;
wire   [63:0] p_Result_33_fu_502_p3;
wire    grp_fu_171_ce;
wire   [0:0] and_ln746_1_fu_406_p2;
reg   [63:0] ap_return_preg;
reg   [24:0] ap_NS_fsm;
reg    ap_condition_647;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 grp_atan2_generic_double_s_fu_163_ap_start_reg = 1'b0;
#0 ap_return_preg = 64'd0;
end

inversekinematics_atan2_generic_double_s grp_atan2_generic_double_s_fu_163(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_atan2_generic_double_s_fu_163_ap_start),
    .ap_done(grp_atan2_generic_double_s_fu_163_ap_done),
    .ap_idle(grp_atan2_generic_double_s_fu_163_ap_idle),
    .ap_ready(grp_atan2_generic_double_s_fu_163_ap_ready),
    .y_in(grp_atan2_generic_double_s_fu_163_y_in),
    .x_in(grp_atan2_generic_double_s_fu_163_x_in),
    .ap_return(grp_atan2_generic_double_s_fu_163_ap_return)
);

inversekinematics_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_178_p0),
    .din1(grp_fu_178_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_178_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_108_p42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_atan2_generic_double_s_fu_163_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_atan2_generic_double_s_fu_163_ap_start_reg <= 1'b1;
        end else if ((grp_atan2_generic_double_s_fu_163_ap_ready == 1'b1)) begin
            grp_atan2_generic_double_s_fu_163_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_1_fu_282_p2) & (1'b1 == ap_CS_fsm_state1)) | ((ap_start == 1'b1) & (1'd1 == and_ln18_fu_258_p2) & (1'b1 == ap_CS_fsm_state1)))) begin
        UnifiedRetVal_reg_96 <= 64'd9223372036854775807;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        UnifiedRetVal_reg_96 <= bitcast_ln521_5_fu_454_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        UnifiedRetVal_reg_96 <= bitcast_ln521_4_fu_465_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        UnifiedRetVal_reg_96 <= bitcast_ln521_3_fu_476_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        UnifiedRetVal_reg_96 <= bitcast_ln521_2_fu_487_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        UnifiedRetVal_reg_96 <= bitcast_ln521_1_fu_498_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        UnifiedRetVal_reg_96 <= bitcast_ln521_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        UnifiedRetVal_reg_96 <= select_ln809_fu_440_p3;
    end else if (((tmp_s_fu_312_p3 == 2'd0) & (icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_2_fu_320_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_96 <= 64'd0;
    end else if (((tmp_s_fu_312_p3 == 2'd0) & (icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_3_fu_326_p2) & (1'd1 == and_ln18_2_fu_320_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_96 <= 64'd4605249457297304856;
    end else if (((tmp_s_reg_561 == 2'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        UnifiedRetVal_reg_96 <= c_reg_82;
    end else if (((tmp_s_reg_561 == 2'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        UnifiedRetVal_reg_96 <= bitcast_ln822_1_fu_422_p1;
    end else if (((tmp_s_reg_561 == 2'd2) & (icmp_ln824_4_reg_553 == 1'd0) & (icmp_ln824_3_reg_545 == 1'd0) & (1'd0 == and_ln18_2_reg_565) & (1'd0 == and_ln766_reg_557) & (1'd0 == and_ln762_reg_549) & (1'd0 == and_ln18_1_reg_541) & (1'd0 == and_ln18_reg_532) & (1'd0 == and_ln18_3_reg_569) & (1'b1 == ap_CS_fsm_state18))) begin
        UnifiedRetVal_reg_96 <= d_reg_608;
    end else if (((tmp_s_reg_561 == 2'd3) & (icmp_ln824_4_reg_553 == 1'd0) & (icmp_ln824_3_reg_545 == 1'd0) & (1'd0 == and_ln18_2_reg_565) & (1'd0 == and_ln766_reg_557) & (1'd0 == and_ln762_reg_549) & (1'd0 == and_ln18_1_reg_541) & (1'd0 == and_ln18_reg_532) & (1'd0 == and_ln18_3_reg_569) & (1'b1 == ap_CS_fsm_state18))) begin
        UnifiedRetVal_reg_96 <= bitcast_ln826_1_fu_435_p1;
    end else if (((tmp_s_fu_312_p3 == 2'd1) & (icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_2_fu_320_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_96 <= 64'd9223372036854775808;
    end else if (((tmp_s_fu_312_p3 == 2'd2) & (icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_2_fu_320_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_96 <= 64'd4614256656552045848;
    end else if (((tmp_s_fu_312_p3 == 2'd3) & (icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_2_fu_320_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_96 <= 64'd13837628693406821656;
    end else if (((tmp_s_fu_312_p3 == 2'd1) & (icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_3_fu_326_p2) & (1'd1 == and_ln18_2_fu_320_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_96 <= 64'd13828621494152080664;
    end else if (((tmp_s_fu_312_p3 == 2'd2) & (icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_3_fu_326_p2) & (1'd1 == and_ln18_2_fu_320_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_96 <= 64'd4612488097114038738;
    end else if (((tmp_s_fu_312_p3 == 2'd3) & (icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_3_fu_326_p2) & (1'd1 == and_ln18_2_fu_320_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        UnifiedRetVal_reg_96 <= 64'd13835860133968814546;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln18_2_fu_320_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln824_5_fu_374_p2 == 1'd1))) begin
        c_reg_82 <= 64'd4605249457297304856;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_atan2_generic_double_s_fu_163_ap_done == 1'b1))) begin
        c_reg_82 <= grp_atan2_generic_double_s_fu_163_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c_reg_82 <= sub_i_reg_603;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln18_2_fu_320_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        a_reg_573[62 : 0] <= a_fu_340_p1[62 : 0];
        b_reg_580[62 : 0] <= b_fu_353_p1[62 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln18_fu_258_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln18_1_reg_541 <= and_ln18_1_fu_282_p2;
        icmp_ln828_1_reg_536 <= icmp_ln828_1_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln18_2_reg_565 <= and_ln18_2_fu_320_p2;
        and_ln18_3_reg_569 <= and_ln18_3_fu_326_p2;
        tmp_s_reg_561 <= tmp_s_fu_312_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        and_ln18_reg_532 <= and_ln18_fu_258_p2;
        icmp_ln828_reg_527 <= icmp_ln828_fu_246_p2;
        p_Result_32_reg_516 <= data_V_2_fu_214_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln762_reg_549 <= and_ln762_fu_294_p2;
        icmp_ln824_3_reg_545 <= icmp_ln824_3_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln766_reg_557 <= and_ln766_fu_306_p2;
        icmp_ln824_4_reg_553 <= icmp_ln824_4_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        d_reg_608 <= grp_fu_272_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln18_2_fu_320_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln824_5_fu_374_p2 == 1'd0))) begin
        icmp_ln746_1_reg_595 <= icmp_ln746_1_fu_386_p2;
        icmp_ln746_reg_590 <= icmp_ln746_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_182 <= grp_atan2_generic_double_s_fu_163_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        sub_i_reg_603 <= grp_fu_272_p_dout0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_647)) begin
        if ((tmp_s_reg_561 == 2'd2)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 = d_reg_608;
        end else if ((tmp_s_reg_561 == 2'd3)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 = bitcast_ln826_1_fu_435_p1;
        end else begin
            ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 = UnifiedRetVal_reg_96;
        end
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_108_p42 = UnifiedRetVal_reg_96;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_108_p42;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_atan2_generic_double_s_fu_163_x_in = a_reg_573;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_atan2_generic_double_s_fu_163_x_in = b_reg_580;
    end else begin
        grp_atan2_generic_double_s_fu_163_x_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_atan2_generic_double_s_fu_163_y_in = b_reg_580;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_atan2_generic_double_s_fu_163_y_in = a_reg_573;
    end else begin
        grp_atan2_generic_double_s_fu_163_y_in = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_171_p0 = 64'd4614256656552045848;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_171_p0 = 64'd4609753056924675352;
    end else begin
        grp_fu_171_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_171_p1 = c_reg_82;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_171_p1 = reg_182;
    end else begin
        grp_fu_171_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (p_Result_s_fu_192_p3 == 1'd1) & (ap_start == 1'b1) & (1'd1 == and_ln762_fu_294_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if (((1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (p_Result_s_fu_192_p3 == 1'd0) & (ap_start == 1'b1) & (1'd1 == and_ln762_fu_294_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((icmp_ln824_3_fu_288_p2 == 1'd1) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (p_Result_s_fu_192_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else if (((icmp_ln824_3_fu_288_p2 == 1'd1) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (p_Result_s_fu_192_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if (((icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln18_2_fu_320_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln824_5_fu_374_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_3_fu_326_p2) & (1'd0 == and_ln18_2_fu_320_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln824_5_fu_374_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln18_2_fu_320_p2) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln18_3_fu_326_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((icmp_ln824_4_fu_300_p2 == 1'd1) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((1'd0 == and_ln762_fu_294_p2) & (1'd0 == and_ln18_1_fu_282_p2) & (1'd0 == and_ln18_fu_258_p2) & (ap_start == 1'b1) & (1'd1 == and_ln766_fu_306_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((1'd1 == and_ln18_fu_258_p2) | ((1'd1 == and_ln18_1_fu_282_p2) | ((icmp_ln824_4_fu_300_p2 == 1'd0) & (icmp_ln824_3_fu_288_p2 == 1'd0) & (1'd0 == and_ln766_fu_306_p2) & (1'd0 == and_ln762_fu_294_p2) & (1'd1 == and_ln18_2_fu_320_p2)))))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'd1 == and_ln746_1_fu_406_p2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_atan2_generic_double_s_fu_163_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_atan2_generic_double_s_fu_163_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_340_p1 = zext_ln368_fu_336_p1;

assign and_ln18_1_fu_282_p2 = (xor_ln828_1_fu_276_p2 & icmp_ln824_2_fu_264_p2);

assign and_ln18_2_fu_320_p2 = (icmp_ln828_1_fu_270_p2 & icmp_ln824_2_fu_264_p2);

assign and_ln18_3_fu_326_p2 = (icmp_ln828_fu_246_p2 & icmp_ln824_fu_240_p2);

assign and_ln18_fu_258_p2 = (xor_ln828_fu_252_p2 & icmp_ln824_fu_240_p2);

assign and_ln746_1_fu_406_p2 = (grp_fu_178_p2 & and_ln746_fu_400_p2);

assign and_ln746_fu_400_p2 = (or_ln746_fu_392_p2 & or_ln746_1_fu_396_p2);

assign and_ln762_fu_294_p2 = (icmp_ln828_fu_246_p2 & icmp_ln824_3_fu_288_p2);

assign and_ln766_fu_306_p2 = (icmp_ln828_1_fu_270_p2 & icmp_ln824_4_fu_300_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_condition_647 = ((icmp_ln824_4_reg_553 == 1'd0) & (icmp_ln824_3_reg_545 == 1'd0) & (1'd0 == and_ln18_2_reg_565) & (1'd0 == and_ln766_reg_557) & (1'd0 == and_ln762_reg_549) & (1'd0 == and_ln18_1_reg_541) & (1'd0 == and_ln18_reg_532) & (1'd0 == and_ln18_3_reg_569) & (1'b1 == ap_CS_fsm_state18));
end

assign b_fu_353_p1 = zext_ln368_1_fu_349_p1;

assign bitcast_ln521_1_fu_498_p1 = p_Result_34_fu_491_p3;

assign bitcast_ln521_2_fu_487_p1 = p_Result_35_fu_480_p3;

assign bitcast_ln521_3_fu_476_p1 = p_Result_36_fu_469_p3;

assign bitcast_ln521_4_fu_465_p1 = p_Result_37_fu_458_p3;

assign bitcast_ln521_5_fu_454_p1 = p_Result_38_fu_447_p3;

assign bitcast_ln521_fu_509_p1 = p_Result_33_fu_502_p3;

assign bitcast_ln822_1_fu_422_p1 = xor_ln822_fu_416_p2;

assign bitcast_ln822_fu_412_p1 = c_reg_82;

assign bitcast_ln826_1_fu_435_p1 = xor_ln826_fu_429_p2;

assign bitcast_ln826_fu_426_p1 = d_reg_608;

assign data_V_2_fu_214_p1 = y_in;

assign data_V_fu_188_p1 = x_in;

assign grp_atan2_generic_double_s_fu_163_ap_start = grp_atan2_generic_double_s_fu_163_ap_start_reg;

assign grp_fu_171_ce = 1'b1;

assign grp_fu_171_p2 = grp_fu_272_p_dout0;

assign grp_fu_178_p0 = zext_ln368_fu_336_p1;

assign grp_fu_178_p1 = zext_ln368_1_fu_349_p1;

assign grp_fu_272_p_ce = 1'b1;

assign grp_fu_272_p_din0 = grp_fu_171_p0;

assign grp_fu_272_p_din1 = grp_fu_171_p1;

assign grp_fu_272_p_opcode = 2'd1;

assign icmp_ln746_1_fu_386_p2 = ((tmp_fu_200_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln746_fu_380_p2 = ((tmp_52_fu_226_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln824_2_fu_264_p2 = ((tmp_fu_200_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln824_3_fu_288_p2 = ((tmp_52_fu_226_p4 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_4_fu_300_p2 = ((tmp_fu_200_p4 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln824_5_fu_374_p2 = ((p_Result_41_fu_358_p3 == p_Result_42_fu_366_p3) ? 1'b1 : 1'b0);

assign icmp_ln824_fu_240_p2 = ((tmp_52_fu_226_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln828_1_fu_270_p2 = ((tmp_51_fu_210_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln828_fu_246_p2 = ((tmp_53_fu_236_p1 == 52'd0) ? 1'b1 : 1'b0);

assign or_ln746_1_fu_396_p2 = (icmp_ln828_1_reg_536 | icmp_ln746_1_reg_595);

assign or_ln746_fu_392_p2 = (icmp_ln828_reg_527 | icmp_ln746_reg_590);

assign p_Result_32_fu_218_p3 = data_V_2_fu_214_p1[32'd63];

assign p_Result_33_fu_502_p3 = {{p_Result_32_reg_516}, {63'd4614256656552045848}};

assign p_Result_34_fu_491_p3 = {{p_Result_32_reg_516}, {63'd0}};

assign p_Result_35_fu_480_p3 = {{p_Result_32_reg_516}, {63'd4609753056924675352}};

assign p_Result_36_fu_469_p3 = {{p_Result_32_reg_516}, {63'd4614256656552045848}};

assign p_Result_37_fu_458_p3 = {{p_Result_32_reg_516}, {63'd0}};

assign p_Result_38_fu_447_p3 = {{p_Result_32_reg_516}, {63'd4609753056924675352}};

assign p_Result_39_fu_332_p1 = data_V_2_fu_214_p1[62:0];

assign p_Result_40_fu_345_p1 = data_V_fu_188_p1[62:0];

assign p_Result_41_fu_358_p3 = {{1'd0}, {p_Result_40_fu_345_p1}};

assign p_Result_42_fu_366_p3 = {{1'd0}, {p_Result_39_fu_332_p1}};

assign p_Result_s_fu_192_p3 = data_V_fu_188_p1[32'd63];

assign select_ln809_fu_440_p3 = ((p_Result_32_reg_516[0:0] == 1'b1) ? 64'd13833125093779451160 : 64'd4609753056924675352);

assign tmp_51_fu_210_p1 = data_V_fu_188_p1[51:0];

assign tmp_52_fu_226_p4 = {{data_V_2_fu_214_p1[62:52]}};

assign tmp_53_fu_236_p1 = data_V_2_fu_214_p1[51:0];

assign tmp_fu_200_p4 = {{data_V_fu_188_p1[62:52]}};

assign tmp_s_fu_312_p3 = {{p_Result_s_fu_192_p3}, {p_Result_32_fu_218_p3}};

assign xor_ln822_fu_416_p2 = (bitcast_ln822_fu_412_p1 ^ 64'd9223372036854775808);

assign xor_ln826_fu_429_p2 = (bitcast_ln826_fu_426_p1 ^ 64'd9223372036854775808);

assign xor_ln828_1_fu_276_p2 = (icmp_ln828_1_fu_270_p2 ^ 1'd1);

assign xor_ln828_fu_252_p2 = (icmp_ln828_fu_246_p2 ^ 1'd1);

assign zext_ln368_1_fu_349_p1 = p_Result_40_fu_345_p1;

assign zext_ln368_fu_336_p1 = p_Result_39_fu_332_p1;

always @ (posedge ap_clk) begin
    a_reg_573[63] <= 1'b0;
    b_reg_580[63] <= 1'b0;
end

endmodule //inversekinematics_atan2_cordic_double_s
