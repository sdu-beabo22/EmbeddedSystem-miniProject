// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module inversekinematics_generic_asin_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_pp0_stage0 = 12'd8;
parameter    ap_ST_fsm_state6 = 12'd16;
parameter    ap_ST_fsm_state7 = 12'd32;
parameter    ap_ST_fsm_state8 = 12'd64;
parameter    ap_ST_fsm_state9 = 12'd128;
parameter    ap_ST_fsm_state10 = 12'd256;
parameter    ap_ST_fsm_state11 = 12'd512;
parameter    ap_ST_fsm_state12 = 12'd1024;
parameter    ap_ST_fsm_state13 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] in_r;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] ap_return;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] cordic_apfixed_circ_table_arctan_128_V_address0;
reg    cordic_apfixed_circ_table_arctan_128_V_ce0;
wire   [125:0] cordic_apfixed_circ_table_arctan_128_V_q0;
reg   [6:0] n_reg_165;
reg   [85:0] t_V_5_reg_176;
reg   [85:0] empty_reg_185;
reg   [85:0] empty_61_reg_197;
reg   [85:0] empty_62_reg_208;
wire   [0:0] p_Result_17_fu_248_p3;
reg   [0:0] p_Result_17_reg_1235;
wire   [63:0] inabs_2_fu_280_p3;
reg   [63:0] inabs_2_reg_1240;
wire   [0:0] icmp_ln103_fu_288_p2;
reg   [0:0] icmp_ln103_reg_1246;
wire   [0:0] icmp_ln106_fu_294_p2;
reg   [0:0] icmp_ln106_reg_1250;
wire   [0:0] icmp_ln109_fu_300_p2;
reg   [0:0] icmp_ln109_reg_1254;
wire   [0:0] icmp_ln112_fu_306_p2;
reg   [0:0] icmp_ln112_reg_1258;
wire   [0:0] tmp_28_fu_312_p3;
reg   [0:0] tmp_28_reg_1262;
wire   [0:0] icmp_ln824_fu_320_p2;
reg   [0:0] icmp_ln824_reg_1266;
wire   [85:0] select_ln557_2_fu_583_p3;
reg   [85:0] select_ln557_2_reg_1271;
wire    ap_CS_fsm_state2;
wire   [0:0] or_ln557_2_fu_591_p2;
reg   [0:0] or_ln557_2_reg_1276;
wire   [85:0] select_ln557_3_fu_597_p3;
wire    ap_CS_fsm_state3;
wire   [6:0] n_1_fu_603_p2;
reg   [6:0] n_1_reg_1286;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln143_fu_609_p2;
reg   [0:0] icmp_ln143_reg_1291;
wire   [0:0] d_V_fu_638_p2;
reg   [0:0] d_V_reg_1295;
wire   [85:0] x_V_fu_772_p3;
wire   [85:0] y_V_fu_780_p3;
wire   [85:0] t_V_7_fu_818_p3;
wire   [85:0] tz_fu_860_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] icmp_ln839_fu_867_p2;
reg   [0:0] icmp_ln839_reg_1325;
wire    ap_CS_fsm_state6;
wire   [85:0] tmp_V_fu_873_p2;
reg   [85:0] tmp_V_reg_1329;
wire   [0:0] p_Result_20_fu_879_p3;
reg   [0:0] p_Result_20_reg_1334;
wire    ap_CS_fsm_state7;
wire   [85:0] tmp_V_2_fu_887_p3;
reg   [85:0] tmp_V_2_reg_1339;
wire   [31:0] sub_ln848_fu_960_p2;
reg   [31:0] sub_ln848_reg_1345;
wire   [0:0] icmp_ln858_fu_1058_p2;
reg   [0:0] icmp_ln858_reg_1351;
wire   [0:0] select_ln858_fu_1078_p3;
reg   [0:0] select_ln858_reg_1356;
wire   [10:0] trunc_ln847_fu_1086_p1;
reg   [10:0] trunc_ln847_reg_1361;
wire   [63:0] select_ln113_fu_1228_p3;
wire    ap_CS_fsm_state13;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg   [6:0] ap_phi_mux_n_phi_fu_169_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] bitcast_ln688_fu_1202_p1;
reg   [63:0] ap_phi_mux_out_phi_fu_224_p14;
reg   [63:0] out_reg_219;
wire    ap_CS_fsm_state8;
wire   [63:0] trunc_ln176_cast42_fu_615_p1;
wire   [63:0] data_V_fu_244_p1;
wire   [63:0] xor_ln96_fu_270_p2;
wire   [63:0] inabs_fu_276_p1;
wire   [10:0] tmp_37_fu_256_p4;
wire   [51:0] tmp_38_fu_266_p1;
wire   [63:0] ireg_fu_326_p1;
wire   [10:0] exp_tmp_fu_341_p4;
wire   [51:0] trunc_ln519_fu_355_p1;
wire   [52:0] p_Result_19_fu_359_p3;
wire   [53:0] zext_ln523_fu_367_p1;
wire   [0:0] p_Result_18_fu_333_p3;
wire   [53:0] man_V_2_fu_371_p2;
wire   [62:0] trunc_ln509_fu_329_p1;
wire   [11:0] zext_ln409_fu_351_p1;
wire   [11:0] F2_fu_391_p2;
wire   [0:0] icmp_ln535_fu_397_p2;
wire   [11:0] add_ln535_fu_403_p2;
wire   [11:0] sub_ln535_fu_409_p2;
wire  signed [53:0] man_V_fu_377_p3;
wire  signed [11:0] sh_amt_fu_415_p3;
wire  signed [31:0] sext_ln540_fu_445_p1;
wire   [53:0] zext_ln540_fu_449_p1;
wire   [0:0] t_V_3_fu_459_p3;
wire  signed [85:0] sext_ln537_fu_429_p1;
wire   [85:0] zext_ln558_fu_475_p1;
wire   [0:0] icmp_ln525_fu_385_p2;
wire   [0:0] icmp_ln536_fu_423_p2;
wire   [0:0] xor_ln525_fu_485_p2;
wire   [0:0] or_ln536_fu_497_p2;
wire   [0:0] xor_ln536_fu_503_p2;
wire   [0:0] and_ln535_fu_509_p2;
wire   [0:0] icmp_ln539_fu_433_p2;
wire   [0:0] xor_ln539_fu_521_p2;
wire   [0:0] or_ln535_fu_533_p2;
wire   [0:0] icmp_ln557_fu_439_p2;
wire   [0:0] xor_ln535_fu_539_p2;
wire   [0:0] and_ln557_fu_545_p2;
wire   [85:0] t_V_4_fu_479_p2;
wire   [85:0] select_ln542_fu_467_p3;
wire   [0:0] and_ln539_1_fu_527_p2;
wire   [0:0] and_ln539_fu_515_p2;
wire   [53:0] t_V_2_fu_453_p2;
wire   [53:0] select_ln557_1_fu_565_p3;
wire   [0:0] and_ln536_fu_491_p2;
wire   [0:0] or_ln557_fu_559_p2;
wire   [85:0] select_ln557_fu_551_p3;
wire  signed [85:0] sext_ln557_fu_573_p1;
wire   [0:0] or_ln557_1_fu_577_p2;
wire   [0:0] bit_fu_624_p3;
wire   [0:0] icmp_ln160_fu_632_p2;
wire   [7:0] n_01_i_cast_fu_620_p1;
wire   [7:0] add_ln176_fu_644_p2;
wire   [0:0] isNeg_fu_650_p3;
wire   [7:0] sub_ln1321_fu_658_p2;
wire   [7:0] ush_fu_664_p3;
wire  signed [31:0] sh_prom_i_i323_i_cast_cast_cast_fu_672_p1;
wire   [85:0] sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1;
wire   [85:0] r_V_fu_680_p2;
wire   [85:0] r_V_34_fu_686_p2;
wire   [85:0] r_V_36_fu_700_p2;
wire   [85:0] r_V_37_fu_706_p2;
wire   [85:0] r_V_43_fu_692_p3;
wire   [85:0] zext_ln1287_fu_720_p1;
wire   [85:0] r_V_44_fu_712_p3;
wire   [85:0] r_V_45_fu_724_p2;
wire   [85:0] r_V_46_fu_730_p2;
wire   [85:0] sub_ln657_fu_736_p2;
wire   [85:0] sub_ln657_1_fu_742_p2;
wire   [85:0] add_ln657_3_fu_760_p2;
wire   [85:0] sub_ln657_2_fu_748_p2;
wire   [85:0] sub_ln657_3_fu_766_p2;
wire   [85:0] add_ln657_fu_754_p2;
wire   [7:0] shl_ln_fu_788_p3;
wire   [85:0] sh_prom_i_i_i_fu_802_p1;
wire   [85:0] r_V_47_fu_806_p2;
wire   [0:0] icmp_ln195_fu_796_p2;
wire   [85:0] t_V_6_fu_812_p2;
wire   [82:0] tmp_19_fu_826_p4;
wire   [83:0] r_V_48_fu_836_p3;
wire   [85:0] zext_ln1252_fu_844_p1;
wire   [85:0] sub_ln657_4_fu_848_p2;
wire   [85:0] add_ln657_5_fu_854_p2;
wire   [63:0] t_fu_894_p4;
reg   [63:0] tmp_fu_904_p3;
wire   [21:0] trunc_ln1026_fu_922_p1;
wire   [63:0] p_Result_21_fu_926_p3;
reg   [63:0] tmp_s_fu_934_p3;
wire   [31:0] trunc_ln1028_fu_942_p1;
wire   [31:0] NZeros_fu_912_p1;
wire   [0:0] hitNonZero_fu_916_p2;
wire   [31:0] NZeros_1_fu_946_p2;
wire   [31:0] NZeros_3_fu_952_p3;
wire   [31:0] lsb_index_fu_966_p2;
wire   [30:0] tmp_34_fu_972_p4;
wire   [6:0] trunc_ln851_fu_988_p1;
wire   [6:0] sub_ln851_fu_992_p2;
wire   [85:0] zext_ln851_fu_998_p1;
wire   [85:0] zext_ln853_fu_1008_p1;
wire   [85:0] lshr_ln851_fu_1002_p2;
wire   [85:0] shl_ln853_fu_1012_p2;
wire   [85:0] or_ln853_1_fu_1018_p2;
wire   [85:0] and_ln853_fu_1024_p2;
wire   [0:0] tmp_35_fu_1036_p3;
wire   [0:0] p_Result_22_fu_1050_p3;
wire   [0:0] xor_ln853_fu_1044_p2;
wire   [0:0] icmp_ln850_fu_982_p2;
wire   [0:0] icmp_ln853_fu_1030_p2;
wire   [0:0] select_ln850_fu_1070_p3;
wire   [0:0] and_ln853_1_fu_1064_p2;
wire   [31:0] sub_ln859_fu_1090_p2;
wire   [85:0] zext_ln859_fu_1095_p1;
wire   [31:0] add_ln858_fu_1104_p2;
wire   [85:0] zext_ln858_fu_1109_p1;
wire   [85:0] lshr_ln858_fu_1113_p2;
wire   [85:0] shl_ln859_fu_1099_p2;
wire   [63:0] trunc_ln859_fu_1118_p1;
wire   [63:0] trunc_ln859_1_fu_1122_p1;
wire   [63:0] m_fu_1126_p3;
wire   [63:0] zext_ln865_fu_1133_p1;
wire   [63:0] m_1_fu_1136_p2;
wire   [62:0] m_4_fu_1142_p4;
wire   [0:0] p_Result_s_fu_1156_p3;
wire   [10:0] sub_ln869_fu_1172_p2;
wire   [10:0] select_ln847_fu_1164_p3;
wire   [10:0] add_ln869_fu_1177_p2;
wire   [63:0] zext_ln866_fu_1152_p1;
wire   [11:0] tmp_6_fu_1183_p3;
wire   [63:0] p_Result_23_fu_1190_p5;
wire   [63:0] bitcast_ln137_fu_1207_p1;
wire   [63:0] xor_ln137_fu_1211_p2;
wire   [63:0] bitcast_ln137_1_fu_1217_p1;
wire   [63:0] out_1_fu_1221_p3;
reg   [63:0] ap_return_preg;
reg   [11:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 64'd0;
end

inversekinematics_generic_asin_double_s_cordic_apfixed_circ_table_arctan_128_V #(
    .DataWidth( 126 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
cordic_apfixed_circ_table_arctan_128_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cordic_apfixed_circ_table_arctan_128_V_address0),
    .ce0(cordic_apfixed_circ_table_arctan_128_V_ce0),
    .q0(cordic_apfixed_circ_table_arctan_128_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_return_preg <= out_1_fu_1221_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_61_reg_197 <= 86'd9671406556917033397649408;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln143_fu_609_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        empty_61_reg_197 <= x_V_fu_772_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_62_reg_208 <= 86'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln143_fu_609_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        empty_62_reg_208 <= y_V_fu_780_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_reg_185 <= 86'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln143_reg_1291 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_reg_185 <= tz_fu_860_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        n_reg_165 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln143_reg_1291 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        n_reg_165 <= n_1_reg_1286;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_300_p2 == 1'd1) & (icmp_ln106_fu_294_p2 == 1'd0) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        out_reg_219 <= inabs_2_fu_280_p3;
    end else if ((((icmp_ln106_fu_294_p2 == 1'd1) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln839_fu_867_p2 == 1'd1)))) begin
        out_reg_219 <= 64'd0;
    end else if ((((tmp_28_fu_312_p3 == 1'd1) & (icmp_ln112_fu_306_p2 == 1'd0) & (icmp_ln109_fu_300_p2 == 1'd0) & (icmp_ln106_fu_294_p2 == 1'd0) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((icmp_ln103_fu_288_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        out_reg_219 <= 64'd9223372036854775807;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        out_reg_219 <= select_ln113_fu_1228_p3;
    end else if (((tmp_28_reg_1262 == 1'd0) & (icmp_ln112_reg_1258 == 1'd0) & (icmp_ln109_reg_1254 == 1'd0) & (icmp_ln106_reg_1250 == 1'd0) & (icmp_ln103_reg_1246 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln839_reg_1325 == 1'd0))) begin
        out_reg_219 <= bitcast_ln688_fu_1202_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_5_reg_176 <= select_ln557_3_fu_597_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln143_fu_609_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        t_V_5_reg_176 <= t_V_7_fu_818_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln143_fu_609_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_V_reg_1295 <= d_V_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln103_reg_1246 <= icmp_ln103_fu_288_p2;
        inabs_2_reg_1240 <= inabs_2_fu_280_p3;
        p_Result_17_reg_1235 <= data_V_fu_244_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln106_reg_1250 <= icmp_ln106_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln106_fu_294_p2 == 1'd0) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln109_reg_1254 <= icmp_ln109_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_300_p2 == 1'd0) & (icmp_ln106_fu_294_p2 == 1'd0) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln112_reg_1258 <= icmp_ln112_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln143_reg_1291 <= icmp_ln143_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln112_fu_306_p2 == 1'd1) & (icmp_ln109_fu_300_p2 == 1'd0) & (icmp_ln106_fu_294_p2 == 1'd0) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln824_reg_1266 <= icmp_ln824_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln839_reg_1325 <= icmp_ln839_fu_867_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln858_reg_1351 <= icmp_ln858_fu_1058_p2;
        p_Result_20_reg_1334 <= empty_reg_185[32'd85];
        select_ln858_reg_1356 <= select_ln858_fu_1078_p3;
        sub_ln848_reg_1345 <= sub_ln848_fu_960_p2;
        tmp_V_2_reg_1339 <= tmp_V_2_fu_887_p3;
        trunc_ln847_reg_1361 <= trunc_ln847_fu_1086_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        n_1_reg_1286 <= n_1_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        or_ln557_2_reg_1276 <= or_ln557_2_fu_591_p2;
        select_ln557_2_reg_1271 <= select_ln557_2_fu_583_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln112_fu_306_p2 == 1'd0) & (icmp_ln109_fu_300_p2 == 1'd0) & (icmp_ln106_fu_294_p2 == 1'd0) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_28_reg_1262 <= data_V_fu_244_p1[32'd62];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln839_fu_867_p2 == 1'd0))) begin
        tmp_V_reg_1329 <= tmp_V_fu_873_p2;
    end
end

always @ (*) begin
    if ((icmp_ln143_fu_609_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln143_reg_1291 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_n_phi_fu_169_p4 = n_1_reg_1286;
    end else begin
        ap_phi_mux_n_phi_fu_169_p4 = n_reg_165;
    end
end

always @ (*) begin
    if (((tmp_28_reg_1262 == 1'd0) & (icmp_ln112_reg_1258 == 1'd0) & (icmp_ln109_reg_1254 == 1'd0) & (icmp_ln106_reg_1250 == 1'd0) & (icmp_ln103_reg_1246 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln839_reg_1325 == 1'd0))) begin
        ap_phi_mux_out_phi_fu_224_p14 = bitcast_ln688_fu_1202_p1;
    end else begin
        ap_phi_mux_out_phi_fu_224_p14 = out_reg_219;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_return = out_1_fu_1221_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        cordic_apfixed_circ_table_arctan_128_V_ce0 = 1'b1;
    end else begin
        cordic_apfixed_circ_table_arctan_128_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_28_fu_312_p3 == 1'd0) & (icmp_ln112_fu_306_p2 == 1'd0) & (icmp_ln109_fu_300_p2 == 1'd0) & (icmp_ln106_fu_294_p2 == 1'd0) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln112_fu_306_p2 == 1'd1) & (icmp_ln109_fu_300_p2 == 1'd0) & (icmp_ln106_fu_294_p2 == 1'd0) & (icmp_ln103_fu_288_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((icmp_ln103_fu_288_p2 == 1'd1) | ((icmp_ln106_fu_294_p2 == 1'd1) | ((icmp_ln109_fu_300_p2 == 1'd1) | ((tmp_28_fu_312_p3 == 1'd1) & (icmp_ln112_fu_306_p2 == 1'd0))))))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln143_fu_609_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln143_fu_609_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln839_fu_867_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_391_p2 = (12'd1075 - zext_ln409_fu_351_p1);

assign NZeros_1_fu_946_p2 = (trunc_ln1028_fu_942_p1 + NZeros_fu_912_p1);

assign NZeros_3_fu_952_p3 = ((hitNonZero_fu_916_p2[0:0] == 1'b1) ? NZeros_1_fu_946_p2 : NZeros_fu_912_p1);

assign NZeros_fu_912_p1 = tmp_fu_904_p3[31:0];

assign add_ln176_fu_644_p2 = ($signed(n_01_i_cast_fu_620_p1) + $signed(8'd255));

assign add_ln535_fu_403_p2 = ($signed(F2_fu_391_p2) + $signed(12'd4013));

assign add_ln657_3_fu_760_p2 = (sub_ln657_fu_736_p2 + r_V_44_fu_712_p3);

assign add_ln657_5_fu_854_p2 = (zext_ln1252_fu_844_p1 + empty_reg_185);

assign add_ln657_fu_754_p2 = (sub_ln657_1_fu_742_p2 + r_V_43_fu_692_p3);

assign add_ln858_fu_1104_p2 = ($signed(sub_ln848_reg_1345) + $signed(32'd4294967242));

assign add_ln869_fu_1177_p2 = (sub_ln869_fu_1172_p2 + select_ln847_fu_1164_p3);

assign and_ln535_fu_509_p2 = (xor_ln536_fu_503_p2 & icmp_ln535_fu_397_p2);

assign and_ln536_fu_491_p2 = (xor_ln525_fu_485_p2 & icmp_ln536_fu_423_p2);

assign and_ln539_1_fu_527_p2 = (xor_ln539_fu_521_p2 & and_ln535_fu_509_p2);

assign and_ln539_fu_515_p2 = (icmp_ln539_fu_433_p2 & and_ln535_fu_509_p2);

assign and_ln557_fu_545_p2 = (xor_ln535_fu_539_p2 & icmp_ln557_fu_439_p2);

assign and_ln853_1_fu_1064_p2 = (xor_ln853_fu_1044_p2 & p_Result_22_fu_1050_p3);

assign and_ln853_fu_1024_p2 = (tmp_V_2_fu_887_p3 & or_ln853_1_fu_1018_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bit_fu_624_p3 = empty_61_reg_197[32'd85];

assign bitcast_ln137_1_fu_1217_p1 = xor_ln137_fu_1211_p2;

assign bitcast_ln137_fu_1207_p1 = ap_phi_mux_out_phi_fu_224_p14;

assign bitcast_ln688_fu_1202_p1 = p_Result_23_fu_1190_p5;

assign cordic_apfixed_circ_table_arctan_128_V_address0 = trunc_ln176_cast42_fu_615_p1;

assign d_V_fu_638_p2 = (icmp_ln160_fu_632_p2 ^ bit_fu_624_p3);

assign data_V_fu_244_p1 = in_r;

assign exp_tmp_fu_341_p4 = {{ireg_fu_326_p1[62:52]}};

assign hitNonZero_fu_916_p2 = ((t_fu_894_p4 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln103_fu_288_p2 = ((tmp_37_fu_256_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_294_p2 = ((tmp_37_fu_256_p4 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_300_p2 = ((tmp_37_fu_256_p4 < 11'd997) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_306_p2 = ((tmp_37_fu_256_p4 == 11'd1023) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_609_p2 = ((ap_phi_mux_n_phi_fu_169_p4 == 7'd84) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_632_p2 = (($signed(empty_62_reg_208) > $signed(t_V_5_reg_176)) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_796_p2 = ((ap_phi_mux_n_phi_fu_169_p4 < 7'd43) ? 1'b1 : 1'b0);

assign icmp_ln525_fu_385_p2 = ((trunc_ln509_fu_329_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln535_fu_397_p2 = (($signed(F2_fu_391_p2) > $signed(12'd83)) ? 1'b1 : 1'b0);

assign icmp_ln536_fu_423_p2 = ((F2_fu_391_p2 == 12'd83) ? 1'b1 : 1'b0);

assign icmp_ln539_fu_433_p2 = ((sh_amt_fu_415_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln557_fu_439_p2 = ((sh_amt_fu_415_p3 < 12'd86) ? 1'b1 : 1'b0);

assign icmp_ln824_fu_320_p2 = ((tmp_38_fu_266_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln839_fu_867_p2 = ((empty_reg_185 == 86'd0) ? 1'b1 : 1'b0);

assign icmp_ln850_fu_982_p2 = (($signed(tmp_34_fu_972_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln853_fu_1030_p2 = ((and_ln853_fu_1024_p2 != 86'd0) ? 1'b1 : 1'b0);

assign icmp_ln858_fu_1058_p2 = (($signed(lsb_index_fu_966_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign inabs_2_fu_280_p3 = ((p_Result_17_fu_248_p3[0:0] == 1'b1) ? inabs_fu_276_p1 : in_r);

assign inabs_fu_276_p1 = xor_ln96_fu_270_p2;

assign ireg_fu_326_p1 = inabs_2_reg_1240;

assign isNeg_fu_650_p3 = add_ln176_fu_644_p2[32'd7];

assign lsb_index_fu_966_p2 = ($signed(sub_ln848_fu_960_p2) + $signed(32'd4294967243));

assign lshr_ln851_fu_1002_p2 = 86'd77371252455336267181195263 >> zext_ln851_fu_998_p1;

assign lshr_ln858_fu_1113_p2 = tmp_V_2_reg_1339 >> zext_ln858_fu_1109_p1;

assign m_1_fu_1136_p2 = (m_fu_1126_p3 + zext_ln865_fu_1133_p1);

assign m_4_fu_1142_p4 = {{m_1_fu_1136_p2[63:1]}};

assign m_fu_1126_p3 = ((icmp_ln858_reg_1351[0:0] == 1'b1) ? trunc_ln859_fu_1118_p1 : trunc_ln859_1_fu_1122_p1);

assign man_V_2_fu_371_p2 = (54'd0 - zext_ln523_fu_367_p1);

assign man_V_fu_377_p3 = ((p_Result_18_fu_333_p3[0:0] == 1'b1) ? man_V_2_fu_371_p2 : zext_ln523_fu_367_p1);

assign n_01_i_cast_fu_620_p1 = ap_phi_mux_n_phi_fu_169_p4;

assign n_1_fu_603_p2 = (ap_phi_mux_n_phi_fu_169_p4 + 7'd1);

assign or_ln535_fu_533_p2 = (or_ln536_fu_497_p2 | icmp_ln535_fu_397_p2);

assign or_ln536_fu_497_p2 = (icmp_ln536_fu_423_p2 | icmp_ln525_fu_385_p2);

assign or_ln557_1_fu_577_p2 = (and_ln539_fu_515_p2 | and_ln536_fu_491_p2);

assign or_ln557_2_fu_591_p2 = (or_ln557_fu_559_p2 | or_ln557_1_fu_577_p2);

assign or_ln557_fu_559_p2 = (and_ln557_fu_545_p2 | and_ln539_1_fu_527_p2);

assign or_ln853_1_fu_1018_p2 = (shl_ln853_fu_1012_p2 | lshr_ln851_fu_1002_p2);

assign out_1_fu_1221_p3 = ((p_Result_17_reg_1235[0:0] == 1'b1) ? bitcast_ln137_1_fu_1217_p1 : ap_phi_mux_out_phi_fu_224_p14);

assign p_Result_17_fu_248_p3 = data_V_fu_244_p1[32'd63];

assign p_Result_18_fu_333_p3 = ireg_fu_326_p1[32'd63];

assign p_Result_19_fu_359_p3 = {{1'd1}, {trunc_ln519_fu_355_p1}};

assign p_Result_20_fu_879_p3 = empty_reg_185[32'd85];

assign p_Result_21_fu_926_p3 = {{trunc_ln1026_fu_922_p1}, {42'd4398046511103}};

assign p_Result_22_fu_1050_p3 = tmp_V_2_fu_887_p3[lsb_index_fu_966_p2];

assign p_Result_23_fu_1190_p5 = {{tmp_6_fu_1183_p3}, {zext_ln866_fu_1152_p1[51:0]}};

assign p_Result_s_fu_1156_p3 = m_1_fu_1136_p2[32'd54];

assign r_V_34_fu_686_p2 = $signed(empty_61_reg_197) >>> sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1;

assign r_V_36_fu_700_p2 = empty_62_reg_208 << sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1;

assign r_V_37_fu_706_p2 = $signed(empty_62_reg_208) >>> sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1;

assign r_V_43_fu_692_p3 = ((isNeg_fu_650_p3[0:0] == 1'b1) ? r_V_fu_680_p2 : r_V_34_fu_686_p2);

assign r_V_44_fu_712_p3 = ((isNeg_fu_650_p3[0:0] == 1'b1) ? r_V_36_fu_700_p2 : r_V_37_fu_706_p2);

assign r_V_45_fu_724_p2 = $signed(r_V_43_fu_692_p3) >>> zext_ln1287_fu_720_p1;

assign r_V_46_fu_730_p2 = $signed(r_V_44_fu_712_p3) >>> zext_ln1287_fu_720_p1;

assign r_V_47_fu_806_p2 = $signed(t_V_5_reg_176) >>> sh_prom_i_i_i_fu_802_p1;

assign r_V_48_fu_836_p3 = {{tmp_19_fu_826_p4}, {1'd0}};

assign r_V_fu_680_p2 = empty_61_reg_197 << sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1;

assign select_ln113_fu_1228_p3 = ((icmp_ln824_reg_1266[0:0] == 1'b1) ? 64'd4609753056924675352 : 64'd9223372036854775807);

assign select_ln542_fu_467_p3 = ((t_V_3_fu_459_p3[0:0] == 1'b1) ? 86'd77371252455336267181195263 : 86'd0);

assign select_ln557_1_fu_565_p3 = ((and_ln539_fu_515_p2[0:0] == 1'b1) ? t_V_2_fu_453_p2 : man_V_fu_377_p3);

assign select_ln557_2_fu_583_p3 = ((or_ln557_fu_559_p2[0:0] == 1'b1) ? select_ln557_fu_551_p3 : sext_ln557_fu_573_p1);

assign select_ln557_3_fu_597_p3 = ((or_ln557_2_reg_1276[0:0] == 1'b1) ? select_ln557_2_reg_1271 : 86'd0);

assign select_ln557_fu_551_p3 = ((and_ln557_fu_545_p2[0:0] == 1'b1) ? t_V_4_fu_479_p2 : select_ln542_fu_467_p3);

assign select_ln847_fu_1164_p3 = ((p_Result_s_fu_1156_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln850_fu_1070_p3 = ((icmp_ln850_fu_982_p2[0:0] == 1'b1) ? icmp_ln853_fu_1030_p2 : p_Result_22_fu_1050_p3);

assign select_ln858_fu_1078_p3 = ((icmp_ln858_fu_1058_p2[0:0] == 1'b1) ? select_ln850_fu_1070_p3 : and_ln853_1_fu_1064_p2);

assign sext_ln537_fu_429_p1 = man_V_fu_377_p3;

assign sext_ln540_fu_445_p1 = sh_amt_fu_415_p3;

assign sext_ln557_fu_573_p1 = $signed(select_ln557_1_fu_565_p3);

assign sh_amt_fu_415_p3 = ((icmp_ln535_fu_397_p2[0:0] == 1'b1) ? add_ln535_fu_403_p2 : sub_ln535_fu_409_p2);

assign sh_prom_i_i323_i_cast_cast_cast_cast_fu_676_p1 = $unsigned(sh_prom_i_i323_i_cast_cast_cast_fu_672_p1);

assign sh_prom_i_i323_i_cast_cast_cast_fu_672_p1 = $signed(ush_fu_664_p3);

assign sh_prom_i_i_i_fu_802_p1 = shl_ln_fu_788_p3;

assign shl_ln853_fu_1012_p2 = 86'd1 << zext_ln853_fu_1008_p1;

assign shl_ln859_fu_1099_p2 = tmp_V_2_reg_1339 << zext_ln859_fu_1095_p1;

assign shl_ln_fu_788_p3 = {{ap_phi_mux_n_phi_fu_169_p4}, {1'd0}};

assign sub_ln1321_fu_658_p2 = (8'd1 - n_01_i_cast_fu_620_p1);

assign sub_ln535_fu_409_p2 = (12'd83 - F2_fu_391_p2);

assign sub_ln657_1_fu_742_p2 = (empty_62_reg_208 - r_V_46_fu_730_p2);

assign sub_ln657_2_fu_748_p2 = (sub_ln657_fu_736_p2 - r_V_44_fu_712_p3);

assign sub_ln657_3_fu_766_p2 = (sub_ln657_1_fu_742_p2 - r_V_43_fu_692_p3);

assign sub_ln657_4_fu_848_p2 = (empty_reg_185 - zext_ln1252_fu_844_p1);

assign sub_ln657_fu_736_p2 = (empty_61_reg_197 - r_V_45_fu_724_p2);

assign sub_ln848_fu_960_p2 = (32'd86 - NZeros_3_fu_952_p3);

assign sub_ln851_fu_992_p2 = (7'd12 - trunc_ln851_fu_988_p1);

assign sub_ln859_fu_1090_p2 = (32'd54 - sub_ln848_reg_1345);

assign sub_ln869_fu_1172_p2 = (11'd3 - trunc_ln847_reg_1361);

assign t_V_2_fu_453_p2 = $signed(man_V_fu_377_p3) >>> zext_ln540_fu_449_p1;

assign t_V_3_fu_459_p3 = ireg_fu_326_p1[32'd63];

assign t_V_4_fu_479_p2 = sext_ln537_fu_429_p1 << zext_ln558_fu_475_p1;

assign t_V_6_fu_812_p2 = (r_V_47_fu_806_p2 + t_V_5_reg_176);

assign t_V_7_fu_818_p3 = ((icmp_ln195_fu_796_p2[0:0] == 1'b1) ? t_V_6_fu_812_p2 : t_V_5_reg_176);

assign t_fu_894_p4 = {{tmp_V_2_fu_887_p3[85:22]}};

assign tmp_19_fu_826_p4 = {{cordic_apfixed_circ_table_arctan_128_V_q0[125:43]}};

assign tmp_28_fu_312_p3 = data_V_fu_244_p1[32'd62];

assign tmp_34_fu_972_p4 = {{lsb_index_fu_966_p2[31:1]}};

assign tmp_35_fu_1036_p3 = lsb_index_fu_966_p2[32'd31];

assign tmp_37_fu_256_p4 = {{data_V_fu_244_p1[62:52]}};

assign tmp_38_fu_266_p1 = data_V_fu_244_p1[51:0];

assign tmp_6_fu_1183_p3 = {{p_Result_20_reg_1334}, {add_ln869_fu_1177_p2}};

assign tmp_V_2_fu_887_p3 = ((p_Result_20_fu_879_p3[0:0] == 1'b1) ? tmp_V_reg_1329 : empty_reg_185);

assign tmp_V_fu_873_p2 = (86'd0 - empty_reg_185);

always @ (t_fu_894_p4) begin
    if (t_fu_894_p4[63] == 1'b1) begin
        tmp_fu_904_p3 = 64'd0;
    end else if (t_fu_894_p4[62] == 1'b1) begin
        tmp_fu_904_p3 = 64'd1;
    end else if (t_fu_894_p4[61] == 1'b1) begin
        tmp_fu_904_p3 = 64'd2;
    end else if (t_fu_894_p4[60] == 1'b1) begin
        tmp_fu_904_p3 = 64'd3;
    end else if (t_fu_894_p4[59] == 1'b1) begin
        tmp_fu_904_p3 = 64'd4;
    end else if (t_fu_894_p4[58] == 1'b1) begin
        tmp_fu_904_p3 = 64'd5;
    end else if (t_fu_894_p4[57] == 1'b1) begin
        tmp_fu_904_p3 = 64'd6;
    end else if (t_fu_894_p4[56] == 1'b1) begin
        tmp_fu_904_p3 = 64'd7;
    end else if (t_fu_894_p4[55] == 1'b1) begin
        tmp_fu_904_p3 = 64'd8;
    end else if (t_fu_894_p4[54] == 1'b1) begin
        tmp_fu_904_p3 = 64'd9;
    end else if (t_fu_894_p4[53] == 1'b1) begin
        tmp_fu_904_p3 = 64'd10;
    end else if (t_fu_894_p4[52] == 1'b1) begin
        tmp_fu_904_p3 = 64'd11;
    end else if (t_fu_894_p4[51] == 1'b1) begin
        tmp_fu_904_p3 = 64'd12;
    end else if (t_fu_894_p4[50] == 1'b1) begin
        tmp_fu_904_p3 = 64'd13;
    end else if (t_fu_894_p4[49] == 1'b1) begin
        tmp_fu_904_p3 = 64'd14;
    end else if (t_fu_894_p4[48] == 1'b1) begin
        tmp_fu_904_p3 = 64'd15;
    end else if (t_fu_894_p4[47] == 1'b1) begin
        tmp_fu_904_p3 = 64'd16;
    end else if (t_fu_894_p4[46] == 1'b1) begin
        tmp_fu_904_p3 = 64'd17;
    end else if (t_fu_894_p4[45] == 1'b1) begin
        tmp_fu_904_p3 = 64'd18;
    end else if (t_fu_894_p4[44] == 1'b1) begin
        tmp_fu_904_p3 = 64'd19;
    end else if (t_fu_894_p4[43] == 1'b1) begin
        tmp_fu_904_p3 = 64'd20;
    end else if (t_fu_894_p4[42] == 1'b1) begin
        tmp_fu_904_p3 = 64'd21;
    end else if (t_fu_894_p4[41] == 1'b1) begin
        tmp_fu_904_p3 = 64'd22;
    end else if (t_fu_894_p4[40] == 1'b1) begin
        tmp_fu_904_p3 = 64'd23;
    end else if (t_fu_894_p4[39] == 1'b1) begin
        tmp_fu_904_p3 = 64'd24;
    end else if (t_fu_894_p4[38] == 1'b1) begin
        tmp_fu_904_p3 = 64'd25;
    end else if (t_fu_894_p4[37] == 1'b1) begin
        tmp_fu_904_p3 = 64'd26;
    end else if (t_fu_894_p4[36] == 1'b1) begin
        tmp_fu_904_p3 = 64'd27;
    end else if (t_fu_894_p4[35] == 1'b1) begin
        tmp_fu_904_p3 = 64'd28;
    end else if (t_fu_894_p4[34] == 1'b1) begin
        tmp_fu_904_p3 = 64'd29;
    end else if (t_fu_894_p4[33] == 1'b1) begin
        tmp_fu_904_p3 = 64'd30;
    end else if (t_fu_894_p4[32] == 1'b1) begin
        tmp_fu_904_p3 = 64'd31;
    end else if (t_fu_894_p4[31] == 1'b1) begin
        tmp_fu_904_p3 = 64'd32;
    end else if (t_fu_894_p4[30] == 1'b1) begin
        tmp_fu_904_p3 = 64'd33;
    end else if (t_fu_894_p4[29] == 1'b1) begin
        tmp_fu_904_p3 = 64'd34;
    end else if (t_fu_894_p4[28] == 1'b1) begin
        tmp_fu_904_p3 = 64'd35;
    end else if (t_fu_894_p4[27] == 1'b1) begin
        tmp_fu_904_p3 = 64'd36;
    end else if (t_fu_894_p4[26] == 1'b1) begin
        tmp_fu_904_p3 = 64'd37;
    end else if (t_fu_894_p4[25] == 1'b1) begin
        tmp_fu_904_p3 = 64'd38;
    end else if (t_fu_894_p4[24] == 1'b1) begin
        tmp_fu_904_p3 = 64'd39;
    end else if (t_fu_894_p4[23] == 1'b1) begin
        tmp_fu_904_p3 = 64'd40;
    end else if (t_fu_894_p4[22] == 1'b1) begin
        tmp_fu_904_p3 = 64'd41;
    end else if (t_fu_894_p4[21] == 1'b1) begin
        tmp_fu_904_p3 = 64'd42;
    end else if (t_fu_894_p4[20] == 1'b1) begin
        tmp_fu_904_p3 = 64'd43;
    end else if (t_fu_894_p4[19] == 1'b1) begin
        tmp_fu_904_p3 = 64'd44;
    end else if (t_fu_894_p4[18] == 1'b1) begin
        tmp_fu_904_p3 = 64'd45;
    end else if (t_fu_894_p4[17] == 1'b1) begin
        tmp_fu_904_p3 = 64'd46;
    end else if (t_fu_894_p4[16] == 1'b1) begin
        tmp_fu_904_p3 = 64'd47;
    end else if (t_fu_894_p4[15] == 1'b1) begin
        tmp_fu_904_p3 = 64'd48;
    end else if (t_fu_894_p4[14] == 1'b1) begin
        tmp_fu_904_p3 = 64'd49;
    end else if (t_fu_894_p4[13] == 1'b1) begin
        tmp_fu_904_p3 = 64'd50;
    end else if (t_fu_894_p4[12] == 1'b1) begin
        tmp_fu_904_p3 = 64'd51;
    end else if (t_fu_894_p4[11] == 1'b1) begin
        tmp_fu_904_p3 = 64'd52;
    end else if (t_fu_894_p4[10] == 1'b1) begin
        tmp_fu_904_p3 = 64'd53;
    end else if (t_fu_894_p4[9] == 1'b1) begin
        tmp_fu_904_p3 = 64'd54;
    end else if (t_fu_894_p4[8] == 1'b1) begin
        tmp_fu_904_p3 = 64'd55;
    end else if (t_fu_894_p4[7] == 1'b1) begin
        tmp_fu_904_p3 = 64'd56;
    end else if (t_fu_894_p4[6] == 1'b1) begin
        tmp_fu_904_p3 = 64'd57;
    end else if (t_fu_894_p4[5] == 1'b1) begin
        tmp_fu_904_p3 = 64'd58;
    end else if (t_fu_894_p4[4] == 1'b1) begin
        tmp_fu_904_p3 = 64'd59;
    end else if (t_fu_894_p4[3] == 1'b1) begin
        tmp_fu_904_p3 = 64'd60;
    end else if (t_fu_894_p4[2] == 1'b1) begin
        tmp_fu_904_p3 = 64'd61;
    end else if (t_fu_894_p4[1] == 1'b1) begin
        tmp_fu_904_p3 = 64'd62;
    end else if (t_fu_894_p4[0] == 1'b1) begin
        tmp_fu_904_p3 = 64'd63;
    end else begin
        tmp_fu_904_p3 = 64'd64;
    end
end

always @ (p_Result_21_fu_926_p3) begin
    if (p_Result_21_fu_926_p3[63] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd0;
    end else if (p_Result_21_fu_926_p3[62] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd1;
    end else if (p_Result_21_fu_926_p3[61] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd2;
    end else if (p_Result_21_fu_926_p3[60] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd3;
    end else if (p_Result_21_fu_926_p3[59] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd4;
    end else if (p_Result_21_fu_926_p3[58] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd5;
    end else if (p_Result_21_fu_926_p3[57] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd6;
    end else if (p_Result_21_fu_926_p3[56] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd7;
    end else if (p_Result_21_fu_926_p3[55] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd8;
    end else if (p_Result_21_fu_926_p3[54] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd9;
    end else if (p_Result_21_fu_926_p3[53] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd10;
    end else if (p_Result_21_fu_926_p3[52] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd11;
    end else if (p_Result_21_fu_926_p3[51] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd12;
    end else if (p_Result_21_fu_926_p3[50] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd13;
    end else if (p_Result_21_fu_926_p3[49] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd14;
    end else if (p_Result_21_fu_926_p3[48] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd15;
    end else if (p_Result_21_fu_926_p3[47] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd16;
    end else if (p_Result_21_fu_926_p3[46] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd17;
    end else if (p_Result_21_fu_926_p3[45] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd18;
    end else if (p_Result_21_fu_926_p3[44] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd19;
    end else if (p_Result_21_fu_926_p3[43] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd20;
    end else if (p_Result_21_fu_926_p3[42] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd21;
    end else if (p_Result_21_fu_926_p3[41] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd22;
    end else if (p_Result_21_fu_926_p3[40] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd23;
    end else if (p_Result_21_fu_926_p3[39] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd24;
    end else if (p_Result_21_fu_926_p3[38] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd25;
    end else if (p_Result_21_fu_926_p3[37] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd26;
    end else if (p_Result_21_fu_926_p3[36] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd27;
    end else if (p_Result_21_fu_926_p3[35] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd28;
    end else if (p_Result_21_fu_926_p3[34] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd29;
    end else if (p_Result_21_fu_926_p3[33] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd30;
    end else if (p_Result_21_fu_926_p3[32] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd31;
    end else if (p_Result_21_fu_926_p3[31] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd32;
    end else if (p_Result_21_fu_926_p3[30] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd33;
    end else if (p_Result_21_fu_926_p3[29] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd34;
    end else if (p_Result_21_fu_926_p3[28] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd35;
    end else if (p_Result_21_fu_926_p3[27] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd36;
    end else if (p_Result_21_fu_926_p3[26] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd37;
    end else if (p_Result_21_fu_926_p3[25] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd38;
    end else if (p_Result_21_fu_926_p3[24] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd39;
    end else if (p_Result_21_fu_926_p3[23] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd40;
    end else if (p_Result_21_fu_926_p3[22] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd41;
    end else if (p_Result_21_fu_926_p3[21] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd42;
    end else if (p_Result_21_fu_926_p3[20] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd43;
    end else if (p_Result_21_fu_926_p3[19] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd44;
    end else if (p_Result_21_fu_926_p3[18] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd45;
    end else if (p_Result_21_fu_926_p3[17] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd46;
    end else if (p_Result_21_fu_926_p3[16] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd47;
    end else if (p_Result_21_fu_926_p3[15] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd48;
    end else if (p_Result_21_fu_926_p3[14] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd49;
    end else if (p_Result_21_fu_926_p3[13] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd50;
    end else if (p_Result_21_fu_926_p3[12] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd51;
    end else if (p_Result_21_fu_926_p3[11] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd52;
    end else if (p_Result_21_fu_926_p3[10] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd53;
    end else if (p_Result_21_fu_926_p3[9] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd54;
    end else if (p_Result_21_fu_926_p3[8] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd55;
    end else if (p_Result_21_fu_926_p3[7] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd56;
    end else if (p_Result_21_fu_926_p3[6] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd57;
    end else if (p_Result_21_fu_926_p3[5] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd58;
    end else if (p_Result_21_fu_926_p3[4] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd59;
    end else if (p_Result_21_fu_926_p3[3] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd60;
    end else if (p_Result_21_fu_926_p3[2] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd61;
    end else if (p_Result_21_fu_926_p3[1] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd62;
    end else if (p_Result_21_fu_926_p3[0] == 1'b1) begin
        tmp_s_fu_934_p3 = 64'd63;
    end else begin
        tmp_s_fu_934_p3 = 64'd64;
    end
end

assign trunc_ln1026_fu_922_p1 = tmp_V_2_fu_887_p3[21:0];

assign trunc_ln1028_fu_942_p1 = tmp_s_fu_934_p3[31:0];

assign trunc_ln176_cast42_fu_615_p1 = ap_phi_mux_n_phi_fu_169_p4;

assign trunc_ln509_fu_329_p1 = ireg_fu_326_p1[62:0];

assign trunc_ln519_fu_355_p1 = ireg_fu_326_p1[51:0];

assign trunc_ln847_fu_1086_p1 = NZeros_3_fu_952_p3[10:0];

assign trunc_ln851_fu_988_p1 = sub_ln848_fu_960_p2[6:0];

assign trunc_ln859_1_fu_1122_p1 = shl_ln859_fu_1099_p2[63:0];

assign trunc_ln859_fu_1118_p1 = lshr_ln858_fu_1113_p2[63:0];

assign tz_fu_860_p3 = ((d_V_reg_1295[0:0] == 1'b1) ? sub_ln657_4_fu_848_p2 : add_ln657_5_fu_854_p2);

assign ush_fu_664_p3 = ((isNeg_fu_650_p3[0:0] == 1'b1) ? sub_ln1321_fu_658_p2 : add_ln176_fu_644_p2);

assign x_V_fu_772_p3 = ((d_V_fu_638_p2[0:0] == 1'b1) ? add_ln657_3_fu_760_p2 : sub_ln657_2_fu_748_p2);

assign xor_ln137_fu_1211_p2 = (bitcast_ln137_fu_1207_p1 ^ 64'd9223372036854775808);

assign xor_ln525_fu_485_p2 = (icmp_ln525_fu_385_p2 ^ 1'd1);

assign xor_ln535_fu_539_p2 = (or_ln535_fu_533_p2 ^ 1'd1);

assign xor_ln536_fu_503_p2 = (or_ln536_fu_497_p2 ^ 1'd1);

assign xor_ln539_fu_521_p2 = (icmp_ln539_fu_433_p2 ^ 1'd1);

assign xor_ln853_fu_1044_p2 = (tmp_35_fu_1036_p3 ^ 1'd1);

assign xor_ln96_fu_270_p2 = (data_V_fu_244_p1 ^ 64'd9223372036854775808);

assign y_V_fu_780_p3 = ((d_V_fu_638_p2[0:0] == 1'b1) ? sub_ln657_3_fu_766_p2 : add_ln657_fu_754_p2);

assign zext_ln1252_fu_844_p1 = r_V_48_fu_836_p3;

assign zext_ln1287_fu_720_p1 = n_1_fu_603_p2;

assign zext_ln409_fu_351_p1 = exp_tmp_fu_341_p4;

assign zext_ln523_fu_367_p1 = p_Result_19_fu_359_p3;

assign zext_ln540_fu_449_p1 = $unsigned(sext_ln540_fu_445_p1);

assign zext_ln558_fu_475_p1 = $unsigned(sext_ln540_fu_445_p1);

assign zext_ln851_fu_998_p1 = sub_ln851_fu_992_p2;

assign zext_ln853_fu_1008_p1 = lsb_index_fu_966_p2;

assign zext_ln858_fu_1109_p1 = add_ln858_fu_1104_p2;

assign zext_ln859_fu_1095_p1 = sub_ln859_fu_1090_p2;

assign zext_ln865_fu_1133_p1 = select_ln858_reg_1356;

assign zext_ln866_fu_1152_p1 = m_4_fu_1142_p4;

endmodule //inversekinematics_generic_asin_double_s
